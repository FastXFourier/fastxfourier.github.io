{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#fast-x-fourier","title":"Fast X Fourier","text":"<p>\u0e40\u0e27\u0e47\u0e1a\u0e44\u0e0b\u0e15\u0e4c\u0e02\u0e2d\u0e07\u0e40\u0e23\u0e32\u0e04\u0e37\u0e2d\u0e41\u0e2b\u0e25\u0e48\u0e07\u0e23\u0e27\u0e21\u0e40\u0e09\u0e25\u0e22\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e41\u0e02\u0e48\u0e07\u0e02\u0e31\u0e19 TOI \u0e23\u0e27\u0e21\u0e16\u0e36\u0e07\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e41\u0e02\u0e48\u0e07\u0e02\u0e31\u0e19\u0e2d\u0e37\u0e48\u0e19 \u0e46 \u0e43\u0e2b\u0e49\u0e1f\u0e23\u0e35! \u0e40\u0e23\u0e32\u0e15\u0e31\u0e49\u0e07\u0e43\u0e08\u0e08\u0e31\u0e14\u0e17\u0e33\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e0a\u0e48\u0e27\u0e22\u0e43\u0e2b\u0e49\u0e17\u0e38\u0e01 \u0e46 \u0e04\u0e19\u0e44\u0e14\u0e49\u0e40\u0e23\u0e35\u0e22\u0e19\u0e23\u0e39\u0e49\u0e41\u0e25\u0e30\u0e40\u0e15\u0e23\u0e35\u0e22\u0e21\u0e15\u0e31\u0e27\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e41\u0e02\u0e48\u0e07\u0e02\u0e31\u0e19\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e21\u0e35\u0e1b\u0e23\u0e30\u0e2a\u0e34\u0e17\u0e18\u0e34\u0e20\u0e32\u0e1e \u0e17\u0e38\u0e01\u0e1a\u0e17\u0e40\u0e09\u0e25\u0e22\u0e40\u0e02\u0e35\u0e22\u0e19\u0e14\u0e49\u0e27\u0e22\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22 \u0e40\u0e02\u0e49\u0e32\u0e43\u0e08\u0e07\u0e48\u0e32\u0e22 \u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22\u0e41\u0e19\u0e27\u0e04\u0e34\u0e14\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e25\u0e30\u0e40\u0e2d\u0e35\u0e22\u0e14 \u0e44\u0e21\u0e48\u0e27\u0e48\u0e32\u0e04\u0e38\u0e13\u0e08\u0e30\u0e01\u0e33\u0e25\u0e31\u0e07\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19 \u0e2b\u0e23\u0e37\u0e2d\u0e2d\u0e22\u0e32\u0e01\u0e17\u0e1a\u0e17\u0e27\u0e19\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e22\u0e32\u0e01 \u0e46 \u2014 \u0e40\u0e23\u0e32\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e0a\u0e48\u0e27\u0e22\u0e04\u0e38\u0e13\u0e40\u0e2a\u0e21\u0e2d</p> <p>\u0e28\u0e36\u0e01\u0e29\u0e32\u0e42\u0e08\u0e17\u0e22\u0e4c: Click Here \u0e28\u0e36\u0e01\u0e29\u0e32\u0e2d\u0e31\u0e25\u0e01\u0e2d\u0e23\u0e34\u0e17\u0e36\u0e21: Click Here</p>"},{"location":"algorithms/","title":"Algorithms","text":"Tags \u2b07\ufe0f Difficulty:  Easy  Medium  Hard Topics:  Graph Algorithms  Dynamic Programming  Data Structures"},{"location":"algorithms/#bitmask-dp","title":"Bitmask DP","text":"<p>Difficulty: <code>Hard</code></p> Topics <ul> <li><code>Dynamic Programming</code></li> </ul> <p>View Solution</p>"},{"location":"algorithms/basic-c-cpp/","title":"C/C++ In A Nutshell","text":""},{"location":"algorithms/basic-c-cpp/#cc-syntax","title":"C/C++ Syntax","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(){\n    printf(\"Hello World\");\n    return 0;\n}\n</code></pre> <ul> <li><code>#include &lt;stdio.h&gt;</code> : \u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e19\u0e33 Library \u0e17\u0e35\u0e48\u0e08\u0e30\u0e21\u0e35 Function \u0e15\u0e48\u0e32\u0e07\u0e46 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e43\u0e2b\u0e49\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e1b\u0e23\u0e30\u0e21\u0e27\u0e25\u0e1c\u0e25\u0e44\u0e14\u0e49 (\u0e42\u0e04\u0e49\u0e14\u0e17\u0e38\u0e01\u0e02\u0e49\u0e2d \u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e21\u0e35\u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14\u0e19\u0e35\u0e49)</li> <li><code>int main()</code> : \u0e01\u0e32\u0e23\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21 \u0e42\u0e14\u0e22\u0e17\u0e38\u0e01\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e08\u0e30\u0e16\u0e39\u0e01\u0e1b\u0e23\u0e30\u0e21\u0e27\u0e25\u0e1c\u0e25\u0e43\u0e19\u0e19\u0e35\u0e49 (\u0e42\u0e04\u0e49\u0e14\u0e17\u0e38\u0e01\u0e02\u0e49\u0e2d \u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e21\u0e35\u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14\u0e19\u0e35\u0e49)</li> <li><code>printf(\"Hello World\");</code> : \u0e43\u0e0a\u0e49\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e48\u0e19 <code>printf</code> \u0e43\u0e19\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25\u0e04\u0e33\u0e27\u0e48\u0e32 \"Hello World\"</li> <li><code>return 0;</code> : \u0e08\u0e1a\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19</li> </ul>"},{"location":"algorithms/basic-c-cpp/#inputoutput-and-variables","title":"Input/Output and Variables","text":"<p>\u0e08\u0e30\u0e16\u0e39\u0e01\u0e43\u0e0a\u0e49\u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e02\u0e35\u0e22\u0e19 <code>printf</code> \u0e2b\u0e23\u0e37\u0e2d <code>scanf</code> <pre><code>int n;\nscanf(\"%d\", &amp;n);      // \u0e43\u0e0a\u0e49\u0e43\u0e19\u0e01\u0e32\u0e23\u0e23\u0e31\u0e1a Input\nprintf(\"%d\", n + n);  // \u0e43\u0e0a\u0e49\u0e43\u0e19\u0e01\u0e32\u0e23\u0e1e\u0e34\u0e21\u0e1e\u0e4c Output\n</code></pre></p> Variable Type Format Specifier What It Collects <code>int</code> <code>%d</code> \u0e08\u0e33\u0e19\u0e27\u0e19\u0e40\u0e15\u0e47\u0e21 <code>float</code> <code>%f</code> \u0e08\u0e33\u0e19\u0e27\u0e19\u0e17\u0e28\u0e19\u0e34\u0e22\u0e21 <code>double</code> <code>%lf</code> \u0e08\u0e33\u0e19\u0e27\u0e19\u0e17\u0e28\u0e19\u0e34\u0e22\u0e21 (\u0e40\u0e01\u0e47\u0e1a\u0e44\u0e14\u0e49\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32 <code>float</code>) <code>char</code> <code>%c</code> \u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23 1 \u0e15\u0e31\u0e27 <code>unsigned int</code> <code>%u</code> \u0e08\u0e33\u0e19\u0e27\u0e19\u0e40\u0e15\u0e47\u0e21\u0e44\u0e21\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e25\u0e1a"},{"location":"algorithms/basic-c-cpp/#if-else","title":"If-Else","text":""},{"location":"algorithms/basic-c-cpp/#loop","title":"Loop","text":""},{"location":"algorithms/basic-c-cpp/#arrays-strings","title":"Arrays &amp; Strings","text":""},{"location":"algorithms/basic-c-cpp/#sorting","title":"Sorting","text":""},{"location":"algorithms/basic-c-cpp/#sequential-search-substring-search","title":"Sequential Search &amp; Substring Search","text":""},{"location":"algorithms/basic-c-cpp/#functions","title":"Functions","text":""},{"location":"algorithms/basic-c-cpp/#pointers","title":"Pointers","text":""},{"location":"algorithms/basic-c-cpp/#structs","title":"Structs","text":""},{"location":"algorithms/bitmask-dp/","title":"Bitmask DP","text":""},{"location":"others/","title":"Others","text":""},{"location":"others/#1-2568","title":"\u0e40\u0e09\u0e25\u0e22\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a \u0e2a\u0e2d\u0e27\u0e19.\u0e04\u0e2d\u0e21\u0e1e\u0e34\u0e27\u0e40\u0e15\u0e2d\u0e23\u0e4c \u0e04\u0e31\u0e14\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e40\u0e02\u0e49\u0e32\u0e04\u0e48\u0e32\u0e22 1 \u0e1b\u0e35\u0e01\u0e32\u0e23\u0e28\u0e36\u0e01\u0e29\u0e32 2568","text":"<p>View Solution</p>"},{"location":"others/#mock-test-1","title":"Mock Test \u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e24\u0e29\u0e0e\u0e35 \u0e2a\u0e2d\u0e27\u0e19.\u0e04\u0e2d\u0e21\u0e1e\u0e34\u0e27\u0e40\u0e15\u0e2d\u0e23\u0e4c \u0e04\u0e48\u0e32\u0e22 1","text":"<p>View Article</p>"},{"location":"others/posn1-2568/","title":"\u0e40\u0e09\u0e25\u0e22\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a \u0e2a\u0e2d\u0e27\u0e19.\u0e04\u0e2d\u0e21\u0e1e\u0e34\u0e27\u0e40\u0e15\u0e2d\u0e23\u0e4c \u0e04\u0e31\u0e14\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e40\u0e02\u0e49\u0e32\u0e04\u0e48\u0e32\u0e22 1 \u0e1b\u0e35\u0e01\u0e32\u0e23\u0e28\u0e36\u0e01\u0e29\u0e32 2568","text":"<p>Click here to download</p> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f</p>"},{"location":"others/posn1-mock-theory-2568/","title":"Mock Test \u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e24\u0e29\u0e0e\u0e35 \u0e2a\u0e2d\u0e27\u0e19.\u0e04\u0e2d\u0e21\u0e1e\u0e34\u0e27\u0e40\u0e15\u0e2d\u0e23\u0e4c \u0e04\u0e48\u0e32\u0e22 1","text":"<p>\u0e1e\u0e27\u0e01\u0e40\u0e23\u0e32\u0e17\u0e35\u0e21\u0e07\u0e32\u0e19 Fast X Fourier \u0e44\u0e14\u0e49\u0e08\u0e31\u0e14\u0e17\u0e33 Mock Test \u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e24\u0e29\u0e0e\u0e35 \u0e2a\u0e2d\u0e27\u0e19.\u0e04\u0e2d\u0e21\u0e1e\u0e34\u0e27\u0e40\u0e15\u0e2d\u0e23\u0e4c \u0e04\u0e48\u0e32\u0e22 1 \u0e2d\u0e22\u0e32\u0e01\u0e43\u0e2b\u0e49\u0e17\u0e38\u0e01\u0e04\u0e19\u0e44\u0e14\u0e49\u0e25\u0e2d\u0e07\u0e17\u0e33\u0e01\u0e31\u0e19\u0e40\u0e2d\u0e07\u0e14\u0e39\u0e01\u0e48\u0e2d\u0e19 \u0e41\u0e25\u0e49\u0e27\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e17\u0e33\u0e40\u0e2a\u0e23\u0e47\u0e08\u0e41\u0e25\u0e49\u0e27 \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16 Download \u0e40\u0e09\u0e25\u0e22\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07\u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a\u0e1a\u0e1a\u0e1a</p> <ul> <li>Download \u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a Mock Test \u0e17\u0e24\u0e29\u0e0e\u0e35 \u0e2a\u0e2d\u0e27\u0e19.\u0e04\u0e2d\u0e21\u0e1e\u0e34\u0e27\u0e40\u0e15\u0e2d\u0e23\u0e4c \u0e04\u0e48\u0e32\u0e22 1: Click here</li> <li>Download \u0e40\u0e09\u0e25\u0e22: Click here</li> </ul>"},{"location":"problems/","title":"Problems","text":"Tags \u2b07\ufe0f Difficulty: (\u0e27\u0e31\u0e14\u0e08\u0e32\u0e01\u0e04\u0e27\u0e32\u0e21\u0e22\u0e32\u0e01\u0e43\u0e19\u0e01\u0e32\u0e23\u0e41\u0e01\u0e49\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e38\u0e13\u0e40\u0e02\u0e49\u0e32\u0e43\u0e08\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e2b\u0e32\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e0a\u0e49\u0e43\u0e19\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e02\u0e49\u0e2d\u0e19\u0e31\u0e49\u0e19\u0e41\u0e25\u0e49\u0e27)  Very Easy  Easy  Medium  Hard Source:  POSN1  TOI Topics:  Arrays  Bitmask  C/C++ Basics  Data Structures  Disjoint Set Union  Dynamic Programming  Math  Sorting  Strings"},{"location":"problems/#1-2566-1","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2566 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 1","text":"<p>Difficulty: <code>Very Easy</code></p> <p>Source: <code>POSN1</code></p> Topics <ul> <li><code>C/C++ Basics</code></li> </ul> <p>View Solution</p>"},{"location":"problems/#1-2566-2","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2566 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 2","text":"<p>Difficulty: <code>Very Easy</code></p> <p>Source: <code>POSN1</code></p> Topics <ul> <li><code>Arrays</code></li> <li><code>Math</code></li> </ul> <p>View Solution</p>"},{"location":"problems/#1-2566-3","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2566 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 3","text":"<p>Difficulty: <code>Very Easy</code></p> <p>Source: <code>POSN1</code></p> Topics <ul> <li><code>Arrays</code></li> <li><code>Strings</code></li> </ul> <p>View Solution</p>"},{"location":"problems/#1-2566-4","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2566 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 4","text":"<p>Difficulty: <code>Very Easy</code></p> <p>Source: <code>POSN1</code></p> Topics <ul> <li><code>C/C++ Basics</code></li> </ul> <p>View Solution</p>"},{"location":"problems/#1-2566-5","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2566 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 5","text":"<p>Difficulty: <code>Very Easy</code></p> <p>Source: <code>POSN1</code></p> Topics <ul> <li><code>Arrays</code></li> <li><code>Strings</code></li> </ul> <p>View Solution</p>"},{"location":"problems/#1-2567-1","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2567 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 1","text":"<p>Difficulty: <code>Very Easy</code></p> <p>Source: <code>POSN1</code></p> Topics <ul> <li><code>Strings</code></li> <li><code>Sorting</code></li> </ul> <p>View Solution</p>"},{"location":"problems/#1-2567-2","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2567 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 2","text":"<p>Difficulty: <code>Very Easy</code></p> <p>Source: <code>POSN1</code></p> Topics <ul> <li><code>Arrays</code></li> <li><code>Strings</code></li> </ul> <p>View Solution</p>"},{"location":"problems/#1-2567-3","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2567 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 3","text":"<p>Difficulty: <code>Very Easy</code></p> <p>Source: <code>POSN1</code></p> Topics <ul> <li><code>Math</code></li> </ul> <p>View Solution</p>"},{"location":"problems/#1-2567-4","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2567 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 4","text":"<p>Difficulty: <code>Very Easy</code></p> <p>Source: <code>POSN1</code></p> Topics <ul> <li><code>Math</code></li> </ul> <p>View Solution</p>"},{"location":"problems/#1-2567-5","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2567 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 5","text":"<p>Difficulty: <code>Very Easy</code></p> <p>Source: <code>POSN1</code></p> Topics <ul> <li><code>Arrays</code></li> <li><code>Strings</code></li> </ul> <p>View Solution</p>"},{"location":"problems/#toi21_duty_free","title":"toi21_duty_free","text":"<p>Difficulty: <code>Hard</code></p> <p>Source: <code>TOI</code></p> Topics <ul> <li><code>Disjoint Set Union</code></li> </ul> <p>View Solution</p>"},{"location":"problems/#bitmask-dp-toi20_bit_string","title":"Bitmask DP &amp; toi20_bit_string","text":"<p>Difficulty: <code>Easy</code></p> <p>Source: <code>TOI</code></p> Topics <ul> <li><code>Dynamic Programming</code></li> <li><code>Bitmask</code></li> </ul> <p>View Solution</p>"},{"location":"problems/#toi20_orbs","title":"toi20_orbs","text":"<p>Difficulty: <code>Medium</code></p> <p>Source: <code>TOI</code></p> Topics <ul> <li><code>Data Structures</code></li> </ul> <p>View Solution</p>"},{"location":"problems/posn1_66_bkk_p1/","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2566 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 1","text":""},{"location":"problems/posn1_66_bkk_p1/#problem","title":"Problem","text":""},{"location":"problems/posn1_66_bkk_p1/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e23\u0e31\u0e1a\u0e04\u0e48\u0e32\u0e08\u0e33\u0e19\u0e27\u0e19\u0e40\u0e15\u0e47\u0e21 3 \u0e15\u0e31\u0e27 \\(a, b, x\\) \u0e41\u0e25\u0e49\u0e27\u0e43\u0e2b\u0e49\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25\u0e04\u0e48\u0e32\u0e43\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e17\u0e35\u0e48 \\(x\\) \u0e02\u0e2d\u0e07\u0e1c\u0e25\u0e04\u0e39\u0e13\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07 \\(a, b\\) \u0e42\u0e14\u0e22\u0e16\u0e49\u0e32\u0e44\u0e21\u0e48\u0e21\u0e35 (\\(ab\\) \u0e21\u0e35\u0e08\u0e33\u0e19\u0e27\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e44\u0e21\u0e48\u0e16\u0e36\u0e07 \\(x\\) \u0e2b\u0e25\u0e31\u0e01) \u0e43\u0e2b\u0e49\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19 '_'</p>"},{"location":"problems/posn1_66_bkk_p1/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25\u0e04\u0e48\u0e32\u0e43\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e17\u0e35\u0e48 \\(x\\) \u0e15\u0e32\u0e21\u0e17\u0e35\u0e48\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e01\u0e33\u0e2b\u0e19\u0e14</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07</p> Input Output 25302 5 3804583 4 34569865 6 239325 _ <p>Prerequisites</p> <ul> <li>C/C++ Basics</li> </ul>"},{"location":"problems/posn1_66_bkk_p1/#solution","title":"Solution","text":""},{"location":"problems/posn1_66_bkk_p1/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e2b\u0e32\u0e1c\u0e25\u0e04\u0e39\u0e13 \\(ab\\) \u0e21\u0e32\u0e44\u0e14\u0e49\u0e41\u0e25\u0e49\u0e27 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e01\u0e48\u0e2d\u0e19\u0e27\u0e48\u0e32 \u0e04\u0e27\u0e32\u0e21\u0e22\u0e32\u0e27 (\u0e08\u0e33\u0e19\u0e27\u0e19\u0e2b\u0e25\u0e31\u0e01) \u0e16\u0e36\u0e07 \\(x\\) \u0e21\u0e31\u0e49\u0e22</p> <ul> <li>\u0e16\u0e49\u0e32\u0e44\u0e21\u0e48\u0e16\u0e36\u0e07 \u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e04\u0e33\u0e15\u0e2d\u0e1a\u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e40\u0e25\u0e22 ('_')</li> <li>\u0e16\u0e49\u0e32\u0e16\u0e36\u0e07 \u0e43\u0e2b\u0e49 <code>loop</code> \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2b\u0e32\u0e04\u0e33\u0e15\u0e2d\u0e1a</li> </ul>"},{"location":"problems/posn1_66_bkk_p1/#code","title":"Code","text":"posn1_66_bkk_p1.cpp<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    int a, b, x;\n    scanf(\"%d %d %d\", &amp;a, &amp;b, &amp;x);\n    int c = a * b, cc = c, l = 0;\n\n    // \u0e19\u0e31\u0e1a\u0e08\u0e33\u0e19\u0e27\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e43\u0e19\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\n    while (cc &gt; 0) {\n        cc /= 10;\n        l++;\n    }\n\n    // \u0e16\u0e49\u0e32\u0e08\u0e33\u0e19\u0e27\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e44\u0e21\u0e48\u0e1e\u0e2d \u0e01\u0e47\u0e1e\u0e34\u0e21\u0e1e\u0e4c '_' \u0e41\u0e25\u0e49\u0e27\u0e2b\u0e22\u0e38\u0e14\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19\u0e17\u0e31\u0e19\u0e17\u0e35\n    if (x &gt; l) {\n        printf(\"_\\n\");\n        return 0;\n    }\n\n    // \u0e04\u0e33\u0e19\u0e27\u0e13\u0e15\u0e48\u0e2d \u0e2b\u0e32\u0e2b\u0e25\u0e31\u0e01\u0e17\u0e35\u0e48 x\n    for (int i = 1; i &lt;= l - x; i++) {\n        c /= 10;\n    }\n    printf(\"%d\\n\", c % 10);\n}\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \u0e2b\u0e23\u0e37\u0e2d\u0e1e\u0e34\u0e21\u0e1e\u0e4c inbox \u0e21\u0e32\u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f</p>"},{"location":"problems/posn1_66_bkk_p2/","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2566 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 2","text":""},{"location":"problems/posn1_66_bkk_p2/#problem","title":"Problem","text":""},{"location":"problems/posn1_66_bkk_p2/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e23\u0e31\u0e1a\u0e04\u0e48\u0e32\u0e08\u0e33\u0e19\u0e27\u0e19\u0e2b\u0e19\u0e36\u0e48\u0e07\u0e43\u0e19\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e34\u0e1a\u0e2b\u0e01 \u0e41\u0e25\u0e49\u0e27\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e04\u0e48\u0e32\u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e2d\u0e07 \u0e41\u0e25\u0e30\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e41\u0e1b\u0e14</p>"},{"location":"problems/posn1_66_bkk_p2/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e2d\u0e07\u0e41\u0e25\u0e30\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e41\u0e1b\u0e14\u0e15\u0e32\u0e21\u0e17\u0e35\u0e48\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e01\u0e33\u0e2b\u0e19\u0e14</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07</p> Input Output 1F 1111137 A18 1010000110005030 <p>Prerequisites</p> <ul> <li>Arrays</li> <li>Loops</li> </ul>"},{"location":"problems/posn1_66_bkk_p2/#solution","title":"Solution","text":""},{"location":"problems/posn1_66_bkk_p2/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01 \u0e20\u0e32\u0e29\u0e32 C \u0e21\u0e35\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e17\u0e35\u0e48\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e41\u0e1b\u0e14 \u0e41\u0e25\u0e30\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e34\u0e1a\u0e2b\u0e01\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e35\u0e22\u0e1a\u0e23\u0e49\u0e2d\u0e22\u0e41\u0e25\u0e49\u0e27 \u0e40\u0e23\u0e32\u0e41\u0e04\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e41\u0e1b\u0e25\u0e07\u0e08\u0e32\u0e01\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e34\u0e1a \u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e2d\u0e07 \u0e42\u0e14\u0e22\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e0a\u0e49\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e23 2 \u0e41\u0e25\u0e49\u0e27\u0e2b\u0e32\u0e40\u0e28\u0e29\u0e17\u0e35\u0e48\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e23\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e22\u0e46 \u0e08\u0e19\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e19\u0e31\u0e49\u0e19\u0e46\u0e2b\u0e21\u0e14\u0e44\u0e1b\u0e19\u0e31\u0e48\u0e19\u0e40\u0e2d\u0e07</p>"},{"location":"problems/posn1_66_bkk_p2/#code","title":"Code","text":"posn1_66_bkk_p2.cpp<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    int hex;\n\n    // %x: \u0e23\u0e31\u0e1a\u0e04\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e34\u0e1a\u0e2b\u0e01\u0e42\u0e14\u0e22\u0e15\u0e23\u0e07\n    scanf(\"%x\",&amp;hex); \n\n    // \u0e41\u0e1b\u0e25\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e34\u0e1a\n    int num = (int)hex; \n\n    // \u0e41\u0e1b\u0e25\u0e07\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e34\u0e1a -&gt; \u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e2d\u0e07\n    int i = 0;\n    int binary[100] = {0};\n    int bi = hex;\n    while (bi &gt; 0) { \n        binary[i] = bi % 2;\n        bi /= 2;\n        i++;\n    }\n\n    // \u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e04\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e2d\u0e07\n    for (int j = i - 1; j &gt;= 0; j--){\n        printf(\"%d\", binary[j]);\n    }\n    printf(\"\\n\");\n\n    // %o: \u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e04\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e41\u0e1b\u0e14\u0e42\u0e14\u0e22\u0e15\u0e23\u0e07\n    printf(\"%o\", num); \n}\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \u0e2b\u0e23\u0e37\u0e2d\u0e1e\u0e34\u0e21\u0e1e\u0e4c inbox \u0e21\u0e32\u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f</p>"},{"location":"problems/posn1_66_bkk_p3/","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2566 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 3","text":""},{"location":"problems/posn1_66_bkk_p3/#problem","title":"Problem","text":""},{"location":"problems/posn1_66_bkk_p3/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e23\u0e31\u0e1a\u0e08\u0e33\u0e19\u0e27\u0e19\u0e40\u0e15\u0e47\u0e21 3 \u0e2b\u0e25\u0e31\u0e01 \u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25\u0e40\u0e1b\u0e47\u0e19\u0e2b\u0e19\u0e49\u0e32\u0e02\u0e2d\u0e07\u0e25\u0e39\u0e01\u0e40\u0e15\u0e4b\u0e32 \u0e15\u0e32\u0e21\u0e40\u0e25\u0e02 3 \u0e15\u0e31\u0e27\u0e19\u0e31\u0e49\u0e19 </p>"},{"location":"problems/posn1_66_bkk_p3/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25\u0e2b\u0e19\u0e49\u0e32\u0e25\u0e39\u0e01\u0e40\u0e15\u0e4b\u0e32\u0e15\u0e32\u0e21\u0e17\u0e35\u0e48\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e01\u0e33\u0e2b\u0e19\u0e14</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07</p> Input Output 351 <pre>*  * *   </pre><pre> *  *  * </pre><pre>  ** *   </pre> <p>Prerequisites</p> <ul> <li>Arrays</li> <li>Strings</li> </ul>"},{"location":"problems/posn1_66_bkk_p3/#solution","title":"Solution","text":""},{"location":"problems/posn1_66_bkk_p3/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e27\u0e48\u0e32\u0e08\u0e33\u0e19\u0e27\u0e19\u0e43\u0e14\u0e2b\u0e19\u0e49\u0e32\u0e15\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23\u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30\u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14\u0e41\u0e25\u0e30\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e25\u0e30\u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14\u0e43\u0e2b\u0e49\u0e04\u0e23\u0e1a\u0e17\u0e31\u0e49\u0e07 3 \u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14 \u0e41\u0e25\u0e49\u0e27\u0e01\u0e47\u0e44\u0e25\u0e48\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27\u0e43\u0e2b\u0e49\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07</p>"},{"location":"problems/posn1_66_bkk_p3/#code","title":"Code","text":"posn1_66_bkk_p3.cpp<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    int N;\n    scanf(\"%d\", &amp;N);\n\n    // \u0e14\u0e36\u0e07\u0e04\u0e48\u0e32\u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30\u0e2b\u0e25\u0e31\u0e01\u0e2d\u0e2d\u0e01\u0e21\u0e32\n    int a, b, c;\n    a = N / 100; b = N % 100 / 10, c = N % 10;\n    if (!(a &gt;= 1 &amp;&amp; a &lt;= 6)) a = 0;\n    if (!(b &gt;= 1 &amp;&amp; b &lt;= 6)) b = 0;\n    if (!(c &gt;= 1 &amp;&amp; c &lt;= 6)) c = 0;\n\n    // \u0e40\u0e01\u0e47\u0e1a\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e02\u0e2d\u0e07\u0e25\u0e39\u0e01\u0e40\u0e15\u0e4b\u0e32\u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30\u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14\n    char dice[7][3][4] = {\n        {\n            \"   \",\n            \"   \",\n            \"___\"\n        },\n        {\n            \"   \",\n            \" * \",\n            \"   \"\n        },\n        {\n            \" * \",\n            \"   \",\n            \" * \"\n        },\n        {\n            \"*  \",\n            \" * \",\n            \"  *\"\n        },\n        {\n            \"* *\",\n            \"   \",\n            \"* *\"\n        },\n        {\n            \"* *\",\n            \" * \",\n            \"* *\"\n        },\n        {\n            \"* *\",\n            \"* *\",\n            \"* *\"\n        }\n    };\n\n    // loop \u0e41\u0e25\u0e49\u0e27\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e42\u0e14\u0e22\u0e15\u0e23\u0e07\n    for (int i = 0; i &lt; 3; i++) printf(\"%s %s %s\\n\", dice[a][i], dice[b][i], dice[c][i]);\n}\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \u0e2b\u0e23\u0e37\u0e2d\u0e1e\u0e34\u0e21\u0e1e\u0e4c inbox \u0e21\u0e32\u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f</p>"},{"location":"problems/posn1_66_bkk_p4/","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2566 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 4","text":""},{"location":"problems/posn1_66_bkk_p4/#problem","title":"Problem","text":""},{"location":"problems/posn1_66_bkk_p4/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e23\u0e31\u0e1a\u0e04\u0e48\u0e32\u0e08\u0e33\u0e19\u0e27\u0e19\u0e40\u0e15\u0e47\u0e21 3 \u0e08\u0e33\u0e19\u0e27\u0e19 \u0e08\u0e33\u0e19\u0e27\u0e19\u0e27\u0e31\u0e19\u0e43\u0e19\u0e40\u0e14\u0e37\u0e2d\u0e19 \u0e27\u0e31\u0e19\u0e41\u0e23\u0e01\u0e02\u0e2d\u0e07\u0e40\u0e14\u0e37\u0e2d\u0e19\u0e04\u0e37\u0e2d\u0e27\u0e31\u0e19\u0e2d\u0e30\u0e44\u0e23 (1 = \u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c, 2 = \u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c, ... 7 = \u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c) \u0e41\u0e25\u0e30 \u0e27\u0e31\u0e19\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e04\u0e48\u0e32\u0e14\u0e27\u0e07 \u0e0b\u0e36\u0e48\u0e07\u0e21\u0e35\u0e04\u0e48\u0e32\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a\u0e1c\u0e25\u0e23\u0e27\u0e21\u0e02\u0e2d\u0e07\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48\u0e02\u0e2d\u0e07\u0e0a\u0e48\u0e2d\u0e07\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e15\u0e34\u0e14\u0e01\u0e31\u0e1a\u0e27\u0e31\u0e19\u0e19\u0e31\u0e49\u0e19\u0e46 \u0e1a\u0e19\u0e1b\u0e0f\u0e34\u0e17\u0e34\u0e19</p>"},{"location":"problems/posn1_66_bkk_p4/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2b\u0e32\u0e04\u0e48\u0e32\u0e14\u0e27\u0e07\u0e02\u0e2d\u0e07\u0e27\u0e31\u0e19\u0e19\u0e31\u0e49\u0e19\u0e46</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07</p> Input Output 30415 60 <p>Prerequisites</p> <ul> <li>C/C++ Basics</li> </ul>"},{"location":"problems/posn1_66_bkk_p4/#solution","title":"Solution","text":""},{"location":"problems/posn1_66_bkk_p4/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e43\u0e2b\u0e49\u0e04\u0e2d\u0e25\u0e31\u0e21\u0e19\u0e4c\u0e0b\u0e49\u0e32\u0e22\u0e2a\u0e38\u0e14\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e2d\u0e25\u0e31\u0e21\u0e19\u0e4c\u0e17\u0e35\u0e48 0 \u0e16\u0e31\u0e14\u0e44\u0e1b\u0e40\u0e1b\u0e47\u0e19 1 \u0e44\u0e1b\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e22\u0e46\u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15\u0e27\u0e48\u0e32\u0e16\u0e49\u0e32\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48 1 \u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e04\u0e2d\u0e25\u0e31\u0e21\u0e19\u0e4c\u0e17\u0e35\u0e48 \\(S\\) \u0e41\u0e25\u0e49\u0e27\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48 \\(N\\) \u0e08\u0e30\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e04\u0e2d\u0e25\u0e31\u0e21\u0e19\u0e4c\u0e17\u0e35\u0e48 \\((N + S - 1)\\) \\(\\%\\) \\(7\\)\u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19\u0e43\u0e0a\u0e49 <code>if-else</code> \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e0a\u0e47\u0e04\u0e27\u0e48\u0e32:</p> <ul> <li>\u0e2b\u0e32\u0e01\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48 \\(S\\) \u0e44\u0e21\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e04\u0e2d\u0e25\u0e31\u0e21\u0e19\u0e4c\u0e0b\u0e49\u0e32\u0e22\u0e2a\u0e38\u0e14\u0e41\u0e25\u0e30 \\(S \\neq 1\\) \u0e43\u0e2b\u0e49\u0e1a\u0e27\u0e01\u0e04\u0e48\u0e32\u0e14\u0e27\u0e07\u0e14\u0e49\u0e27\u0e22 \\(S-1\\) \u0e41\u0e25\u0e30\u0e17\u0e33\u0e40\u0e0a\u0e48\u0e19\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19\u0e01\u0e31\u0e1a\u0e0a\u0e48\u0e2d\u0e07\u0e17\u0e32\u0e07\u0e14\u0e49\u0e32\u0e19\u0e02\u0e27\u0e32</li> <li>\u0e2a\u0e48\u0e27\u0e19\u0e0a\u0e48\u0e2d\u0e07\u0e14\u0e49\u0e32\u0e19\u0e1a\u0e19 \u0e40\u0e0a\u0e47\u0e04\u0e27\u0e48\u0e32 \u0e16\u0e49\u0e32\u0e08\u0e33\u0e19\u0e27\u0e19\u0e19\u0e31\u0e49\u0e19\u0e21\u0e35\u0e04\u0e48\u0e32\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32 7 \u0e43\u0e2b\u0e49\u0e19\u0e33\u0e04\u0e48\u0e32\u0e14\u0e27\u0e07\u0e1a\u0e27\u0e01\u0e14\u0e49\u0e27\u0e22 \\(S - 7\\) \u0e41\u0e25\u0e30\u0e17\u0e33\u0e40\u0e0a\u0e48\u0e19\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e0a\u0e48\u0e2d\u0e07\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07</li> </ul>"},{"location":"problems/posn1_66_bkk_p4/#code","title":"Code","text":"posn1_66_bkk_p4.cpp<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    int X, S, N;\n    scanf(\"%d %d %d\", &amp;X, &amp;S, &amp;N);\n    S--; // \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e19\u0e33\u0e40\u0e02\u0e49\u0e32\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a 1-indexed\n\n    // \u0e2b\u0e32 column \u0e43\u0e19\u0e1b\u0e0f\u0e34\u0e17\u0e34\u0e19\u0e02\u0e2d\u0e07\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48\u0e17\u0e35\u0e48\u0e23\u0e31\u0e1a input \u0e21\u0e32\n    int col = (N + S - 1) % 7;\n    int ans = 0;\n\n    // if-else \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e04\u0e33\u0e19\u0e27\u0e13\u0e15\u0e23\u0e07\u0e46\n    if (N &gt; 7) ans += N - 7;\n    if (N + 7 &lt;= X) ans += N + 7;\n    if (col &gt; 0 &amp;&amp; N &gt; 1) ans += N - 1;\n    if (col &lt; 6 &amp;&amp; N &lt; X) ans += N + 1;\n\n    printf(\"%d\", ans);\n}\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \u0e2b\u0e23\u0e37\u0e2d\u0e1e\u0e34\u0e21\u0e1e\u0e4c inbox \u0e21\u0e32\u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f</p>"},{"location":"problems/posn1_66_bkk_p5/","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2566 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 5","text":""},{"location":"problems/posn1_66_bkk_p5/#problem","title":"Problem","text":""},{"location":"problems/posn1_66_bkk_p5/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e23\u0e31\u0e1a String \u0e17\u0e35\u0e48\u0e21\u0e35\u0e41\u0e04\u0e48\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e20\u0e32\u0e29\u0e32\u0e2d\u0e31\u0e07\u0e01\u0e24\u0e29\u0e15\u0e31\u0e27\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e43\u0e2b\u0e0d\u0e48\u0e21\u0e32 \u0e08\u0e07\u0e2b\u0e32\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e17\u0e35\u0e48\u0e21\u0e35 ASCII VALUE \u0e19\u0e49\u0e2d\u0e22\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e41\u0e25\u0e30\u0e44\u0e21\u0e48\u0e21\u0e35\u0e15\u0e31\u0e27\u0e0b\u0e49\u0e33\u0e43\u0e19 String</p>"},{"location":"problems/posn1_66_bkk_p5/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e2b\u0e32\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e17\u0e35\u0e48\u0e19\u0e49\u0e2d\u0e22\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e41\u0e25\u0e30\u0e44\u0e21\u0e48\u0e21\u0e35\u0e15\u0e31\u0e27\u0e0b\u0e49\u0e33\u0e43\u0e19 String</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07</p> Input Output COMPUTER C THANAKIT K <p>Prerequisites</p> <ul> <li>Arrays</li> <li>Strings</li> </ul>"},{"location":"problems/posn1_66_bkk_p5/#solution","title":"Solution","text":""},{"location":"problems/posn1_66_bkk_p5/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e40\u0e23\u0e32\u0e08\u0e30\u0e43\u0e0a\u0e49 Array \u0e40\u0e01\u0e47\u0e1a\u0e27\u0e48\u0e32\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27\u0e21\u0e35\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e32\u0e01\u0e0f\u0e21\u0e32\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e01\u0e35\u0e48\u0e04\u0e23\u0e31\u0e49\u0e07 \u0e42\u0e14\u0e22\u0e08\u0e30\u0e43\u0e0a\u0e49 ASCII VALUE \u0e02\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27\u0e41\u0e17\u0e19 Index \u0e21\u0e32\u0e40\u0e01\u0e47\u0e1a\u0e43\u0e2a\u0e48 Array \u0e41\u0e25\u0e30\u0e15\u0e2d\u0e19\u0e08\u0e1a\u0e01\u0e47\u0e44\u0e25\u0e48\u0e08\u0e32\u0e01 'A' - 'Z' \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e27\u0e48\u0e32\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e43\u0e14\u0e17\u0e35\u0e48\u0e1b\u0e23\u0e32\u0e01\u0e0f\u0e21\u0e32\u0e40\u0e1e\u0e35\u0e22\u0e07 1 \u0e04\u0e23\u0e31\u0e49\u0e07 \u0e41\u0e25\u0e30\u0e21\u0e35\u0e04\u0e48\u0e32\u0e19\u0e49\u0e2d\u0e22\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14</p>"},{"location":"problems/posn1_66_bkk_p5/#code","title":"Code","text":"posn1_66_bkk_p5.cpp<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    char str[25];\n    scanf(\"%s\", str);\n\n    // \u0e19\u0e31\u0e1a\u0e08\u0e33\u0e19\u0e27\u0e19\u0e01\u0e32\u0e23\u0e42\u0e1c\u0e25\u0e48\u0e15\u0e31\u0e27\u0e02\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27\n    int cnt[26] = {0};\n    for (int i = 0; str[i] != '\\0'; i++) cnt[str[i] - 'A']++;\n\n    // loop \u0e41\u0e25\u0e49\u0e27\u0e2b\u0e32\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e15\u0e31\u0e27\u0e41\u0e23\u0e01\u0e17\u0e35\u0e48\u0e42\u0e1c\u0e25\u0e48\u0e21\u0e32\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e04\u0e23\u0e31\u0e49\u0e07\u0e40\u0e14\u0e35\u0e22\u0e27 \u0e41\u0e25\u0e49\u0e27\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e04\u0e33\u0e15\u0e2d\u0e1a\u0e2d\u0e2d\u0e01\u0e21\u0e32\n    for (int i = 0; i &lt; 26; i++) {\n        if (cnt[i] == 1) {\n            printf(\"%c\", 'A' + i);\n            break;\n        }\n    }\n}\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \u0e2b\u0e23\u0e37\u0e2d\u0e1e\u0e34\u0e21\u0e1e\u0e4c inbox \u0e21\u0e32\u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f</p>"},{"location":"problems/posn1_67_bkk_p1/","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2567 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 1","text":""},{"location":"problems/posn1_67_bkk_p1/#problem","title":"Problem","text":""},{"location":"problems/posn1_67_bkk_p1/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e40\u0e23\u0e32\u0e21\u0e35 String \u0e17\u0e35\u0e48\u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e14\u0e49\u0e27\u0e22\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e20\u0e32\u0e29\u0e32\u0e2d\u0e31\u0e07\u0e01\u0e24\u0e29 1 String \u0e41\u0e25\u0e49\u0e27\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27\u0e43\u0e19 String \u0e19\u0e31\u0e49\u0e19 \u0e40\u0e23\u0e35\u0e22\u0e07\u0e08\u0e32\u0e01\u0e15\u0e31\u0e27\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e43\u0e2b\u0e0d\u0e48\u0e01\u0e48\u0e2d\u0e19\u0e15\u0e31\u0e27\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e40\u0e25\u0e47\u0e01 \u0e41\u0e25\u0e49\u0e27\u0e40\u0e23\u0e35\u0e22\u0e07\u0e15\u0e32\u0e21\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e1e\u0e08\u0e19\u0e32\u0e19\u0e38\u0e01\u0e23\u0e21</p>"},{"location":"problems/posn1_67_bkk_p1/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e35\u0e22\u0e07\u0e25\u0e33\u0e14\u0e31\u0e1a String \u0e15\u0e32\u0e21\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02\u0e02\u0e2d\u0e07\u0e42\u0e08\u0e17\u0e22\u0e4c</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07</p> Input Output ILOVECOMPUTERJa C E I J L M O P R T U V a myNameis N a e i m s y <p>Prerequisites</p> <ul> <li>Strings</li> <li>Sortings</li> </ul>"},{"location":"problems/posn1_67_bkk_p1/#solution","title":"Solution","text":""},{"location":"problems/posn1_67_bkk_p1/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e23\u0e31\u0e1a Input \u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19 String \u0e41\u0e25\u0e49\u0e27\u0e01\u0e47\u0e41\u0e04\u0e48\u0e17\u0e33\u0e01\u0e32\u0e23 Sort \u0e15\u0e23\u0e07\u0e46\u0e40\u0e25\u0e22 \u0e42\u0e14\u0e22\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e19\u0e35\u0e49 \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e0a\u0e49\u0e2d\u0e31\u0e25\u0e01\u0e2d\u0e23\u0e34\u0e17\u0e36\u0e21\u0e01\u0e32\u0e23\u0e40\u0e23\u0e35\u0e22\u0e07\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e41\u0e1a\u0e1a\u0e43\u0e14\u0e01\u0e47\u0e44\u0e14\u0e49 \u0e44\u0e21\u0e48\u0e27\u0e48\u0e32\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19 Bubble Sort, Insertion Sort, Selection Sort, \u0e2f\u0e25\u0e2f</p>"},{"location":"problems/posn1_67_bkk_p1/#code","title":"Code","text":"string_sorting.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main() {\n    char str[35];\n    scanf(\"%s\", str);\n    int n = strlen(str); // strlen(): \u0e2b\u0e32\u0e04\u0e27\u0e32\u0e21\u0e22\u0e32\u0e27\u0e02\u0e2d\u0e07 String\n\n    // \u0e17\u0e33\u0e01\u0e32\u0e23\u0e40\u0e23\u0e35\u0e22\u0e07\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e43\u0e19 String (Bubble Sort)\n    for (int i = 0; i &lt; n; i++) {\n        for (int j = 0; j &lt; n - 1; j++) {\n            if (str[j] &gt; str[j + 1]) {\n                char temp = str[j];\n                str[j] = str[j + 1];\n                str[j + 1] = temp;\n            }\n        }\n    }\n\n    // \u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e04\u0e33\u0e15\u0e2d\u0e1a\u0e2d\u0e2d\u0e01\u0e21\u0e32\n    printf(\"%c \", str[0]);\n    for (int i = 1; i &lt; n; i++) {\n        if (str[i] == str[i - 1]) continue;\n        printf(\"%c \", str[i]);\n    }\n    return 0;\n}\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f  </p>"},{"location":"problems/posn1_67_bkk_p2/","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2567 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 2","text":""},{"location":"problems/posn1_67_bkk_p2/#problem","title":"Problem","text":""},{"location":"problems/posn1_67_bkk_p2/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e40\u0e23\u0e32\u0e21\u0e35 String \u0e08\u0e33\u0e19\u0e27\u0e19 2 \u0e2d\u0e31\u0e19 \u0e41\u0e25\u0e30\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e17\u0e35\u0e48\u0e0b\u0e49\u0e33\u0e01\u0e31\u0e19 (\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e40\u0e25\u0e47\u0e01-\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e43\u0e2b\u0e0d\u0e48\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e01\u0e31\u0e19\u0e14\u0e49\u0e27\u0e22)</p>"},{"location":"problems/posn1_67_bkk_p2/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2b\u0e32\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e17\u0e35\u0e48\u0e0b\u0e49\u0e33\u0e01\u0e31\u0e19</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07</p> Input Output PHYSICSMATHCOMPUTER C M P T agodinCARbookontable a o n <p>Prerequisites</p> <ul> <li>Arrays</li> <li>Strings</li> </ul>"},{"location":"problems/posn1_67_bkk_p2/#solution","title":"Solution","text":""},{"location":"problems/posn1_67_bkk_p2/#1-brute-force","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33\u0e17\u0e35\u0e48 1 (Brute Force)","text":"<p>\u0e23\u0e31\u0e1a Input \u0e40\u0e02\u0e49\u0e32\u0e21\u0e32 \u0e41\u0e25\u0e49\u0e27\u0e40\u0e23\u0e32\u0e08\u0e30 Loop \u0e15\u0e32\u0e21\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27\u0e43\u0e19 String \u0e41\u0e23\u0e01 \u0e0b\u0e36\u0e48\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30\u0e04\u0e23\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48 Loop \u0e40\u0e23\u0e32\u0e08\u0e30 Loop \u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e41\u0e23\u0e01\u0e08\u0e19\u0e08\u0e1a\u0e02\u0e2d\u0e07 String \u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07 \u0e41\u0e25\u0e49\u0e27\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e08\u0e2d\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e0b\u0e49\u0e33 \u0e40\u0e23\u0e32\u0e01\u0e47\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e01\u0e47\u0e1a\u0e40\u0e2d\u0e32\u0e44\u0e27\u0e49\u0e27\u0e48\u0e32 \u0e15\u0e2d\u0e19\u0e08\u0e1a\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21 \u0e08\u0e30\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e15\u0e31\u0e27\u0e19\u0e35\u0e49\u0e2d\u0e2d\u0e01\u0e21\u0e32 (\u0e43\u0e0a\u0e49 Array \u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e01\u0e47\u0e1a)</p>"},{"location":"problems/posn1_67_bkk_p2/#2-arrays","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33\u0e17\u0e35\u0e48 2 (Arrays)","text":"<p>\u0e23\u0e31\u0e1a Input \u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19 String \u0e41\u0e25\u0e49\u0e27\u0e40\u0e23\u0e32\u0e01\u0e47\u0e41\u0e04\u0e48 Loop \u0e15\u0e32\u0e21\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27 \u0e41\u0e25\u0e30\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e1e\u0e1a\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27 \u0e01\u0e47\u0e19\u0e31\u0e1a\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e25\u0e07\u0e43\u0e19 Array \u0e17\u0e35\u0e48\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02 \u0e27\u0e48\u0e32\u0e1e\u0e1a\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e17\u0e35\u0e48 \\(i\\) \u0e21\u0e32\u0e41\u0e25\u0e49\u0e27\u0e01\u0e35\u0e48\u0e15\u0e31\u0e27 \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e23\u0e32\u0e08\u0e30\u0e21\u0e35\u0e2d\u0e22\u0e39\u0e48 2 Array (\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 \\(count\\_a\\) \u0e41\u0e25\u0e30 \\(count\\_b\\)) \u0e41\u0e25\u0e49\u0e27\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e32 Loop \u0e15\u0e32\u0e21\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e02\u0e2d\u0e07 String \\(a\\) \u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e02\u0e35\u0e22\u0e19\u0e27\u0e48\u0e32 \\(count\\_a[a[i]]\\)++; (\u0e40\u0e2b\u0e15\u0e38\u0e1c\u0e25\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e17\u0e33\u0e41\u0e1a\u0e1a\u0e19\u0e35\u0e49\u0e44\u0e14\u0e49 \u0e40\u0e1b\u0e47\u0e19\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e27\u0e48\u0e32 \u0e43\u0e19\u0e20\u0e32\u0e29\u0e32 C \u0e08\u0e30 convert \u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23 \u0e43\u0e2b\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e48\u0e32 ASCII VALUE \u0e02\u0e2d\u0e07\u0e21\u0e31\u0e19\u0e43\u0e2b\u0e49\u0e40\u0e25\u0e22) \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e32\u0e40\u0e01\u0e47\u0e1a\u0e04\u0e48\u0e32\u0e43\u0e19 \\(count\\_a\\) \u0e04\u0e23\u0e1a\u0e2b\u0e21\u0e14\u0e41\u0e25\u0e49\u0e27 \u0e23\u0e2d\u0e1a\u0e19\u0e35\u0e49 \u0e40\u0e23\u0e32\u0e08\u0e30 Loop \u0e15\u0e32\u0e21\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e02\u0e2d\u0e07 String \\(b\\) \u0e41\u0e25\u0e49\u0e27\u0e16\u0e49\u0e32\u0e2b\u0e32\u0e01\u0e27\u0e48\u0e32\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e15\u0e31\u0e27\u0e19\u0e35\u0e49 \u0e40\u0e04\u0e22\u0e1b\u0e23\u0e32\u0e01\u0e0f\u0e02\u0e36\u0e49\u0e19\u0e43\u0e19 \\(a\\) \u0e42\u0e14\u0e22\u0e17\u0e35\u0e48\u0e21\u0e31\u0e19\u0e1b\u0e23\u0e32\u0e01\u0e0f\u0e04\u0e23\u0e31\u0e49\u0e07\u0e41\u0e23\u0e01\u0e43\u0e19 \\(b\\) \u0e40\u0e23\u0e32\u0e08\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e2d\u0e2d\u0e01\u0e21\u0e32 \u0e15\u0e32\u0e21\u0e17\u0e35\u0e48\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e43\u0e2b\u0e49\u0e19\u0e31\u0e48\u0e19\u0e40\u0e2d\u0e07</p>"},{"location":"problems/posn1_67_bkk_p2/#code-2","title":"Code (\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33\u0e17\u0e35\u0e48 2)","text":"repeating_string.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main(){\n    char a[25], b[25];\n    scanf(\"%s %s\", a, b);\n    int n = strlen(a), m = strlen(b); // strlen(): \u0e2b\u0e32\u0e04\u0e27\u0e32\u0e21\u0e22\u0e32\u0e27\u0e02\u0e2d\u0e07 String\n\n    // \u0e19\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e42\u0e1c\u0e25\u0e48\u0e15\u0e31\u0e27\u0e02\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27\u0e43\u0e19\u0e2a\u0e15\u0e23\u0e34\u0e07 A\n    int count_a[200] = {0};\n    for (int i = 0; i &lt; n; i++) {\n        count_a[a[i]]++;\n    }\n\n    // loop \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2b\u0e32\u0e04\u0e33\u0e15\u0e2d\u0e1a\n    int count_b[200] = {0};\n    for (int i = 0; i &lt; m; i++) {\n        // \u0e16\u0e49\u0e32\u0e2b\u0e32\u0e01\u0e27\u0e48\u0e32\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e19\u0e35\u0e49\u0e42\u0e1c\u0e25\u0e48\u0e21\u0e32\u0e43\u0e19 A \u0e41\u0e25\u0e30\u0e42\u0e1c\u0e25\u0e48\u0e21\u0e32\u0e43\u0e19 B \u0e40\u0e1b\u0e47\u0e19\u0e04\u0e23\u0e31\u0e49\u0e07\u0e41\u0e23\u0e01 \u0e01\u0e47\u0e43\u0e2b\u0e49\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e2d\u0e2d\u0e01\u0e21\u0e32\n        if (count_a[b[i]] &gt; 0 &amp;&amp; count_b[b[i]] == 0) {\n            printf(\"%c \", b[i]);\n            count_b[b[i]]++;\n        }\n    }\n    return 0;\n}\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f  </p>"},{"location":"problems/posn1_67_bkk_p3/","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2567 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 3","text":""},{"location":"problems/posn1_67_bkk_p3/#problem","title":"Problem","text":""},{"location":"problems/posn1_67_bkk_p3/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e39\u0e07\u0e02\u0e2d\u0e07\u0e08\u0e23\u0e27\u0e14 \u0e13 \u0e40\u0e27\u0e25\u0e32\u0e17\u0e35\u0e48 \\(t\\) \u0e02\u0e2d\u0e07\u0e08\u0e23\u0e27\u0e14\u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e2a\u0e48\u0e07\u0e44\u0e1b\u0e1a\u0e34\u0e19\u0e19\u0e2d\u0e01\u0e42\u0e25\u0e01 \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e32\u0e23\u0e39\u0e49\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e39\u0e07\u0e02\u0e2d\u0e07\u0e08\u0e23\u0e27\u0e14 \u0e13 \u0e40\u0e27\u0e25\u0e32\u0e17\u0e35\u0e48 \\(0-5\\)</p>"},{"location":"problems/posn1_67_bkk_p3/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2b\u0e32\u0e04\u0e27\u0e32\u0e21\u0e40\u0e23\u0e47\u0e27\u0e02\u0e2d\u0e07\u0e08\u0e23\u0e27\u0e14 \u0e13 \u0e40\u0e27\u0e25\u0e32\u0e17\u0e35\u0e48 \\(t\\)</p> <p>\u0e15\u0e32\u0e23\u0e32\u0e07\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e39\u0e07\u0e02\u0e2d\u0e07\u0e08\u0e23\u0e27\u0e14\u0e17\u0e35\u0e48\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e43\u0e2b\u0e49</p> \u0e40\u0e27\u0e25\u0e32 (\u0e27\u0e34\u0e19\u0e32\u0e17\u0e35) \u0e04\u0e27\u0e32\u0e21\u0e2a\u0e39\u0e07 (\u0e40\u0e21\u0e15\u0e23) 0 0 1 4 2 14 3 30 4 52 5 80 <p>Prerequisites</p> <ul> <li>Math</li> </ul>"},{"location":"problems/posn1_67_bkk_p3/#solution","title":"Solution","text":""},{"location":"problems/posn1_67_bkk_p3/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15:</p> <ul> <li>0: 0</li> <li>1: 4</li> <li>2: 14</li> <li>3: 30</li> <li>4: 52</li> <li>5: 80</li> </ul> <p>\u0e08\u0e30\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e02\u0e36\u0e49\u0e19\u0e17\u0e35\u0e25\u0e30 4, 10, 16, 22, 28 \u0e0b\u0e36\u0e48\u0e07\u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15\u0e27\u0e48\u0e32 \u0e01\u0e32\u0e23\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e02\u0e36\u0e49\u0e19 \u0e08\u0e30\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e02\u0e36\u0e49\u0e19\u0e17\u0e35\u0e25\u0e30 6</p> <ul> <li> <p>\u0e08\u0e30\u0e44\u0e14\u0e49\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e31\u0e21\u0e1e\u0e31\u0e19\u0e18\u0e4c\u0e40\u0e27\u0e35\u0e22\u0e19\u0e40\u0e01\u0e34\u0e14\u0e40\u0e1b\u0e47\u0e19: \\(h(t) = h(t - 1) + (6t - 2)\\) \u0e42\u0e14\u0e22\u0e21\u0e35 \\(h(0) = 0\\)</p> </li> <li> <p>\u0e41\u0e17\u0e19\u0e04\u0e48\u0e32: \\(h(t) = h(t - 1) + (6t - 2)\\) \\(h(t - 1) = h(t - 2) + (6(t - 1) - 2)\\) . . \\(h(1) = h(0) + (6(1) - 2)\\) \\(h(0) = 0\\)</p> </li> <li> <p>\u0e08\u0e31\u0e14\u0e23\u0e39\u0e1b \\(h(t) = (6t - 2) + (6(t - 1) - 2) + (6(t - 2) - 2) + ... + (6(1) - 2) + 0\\) \\(h(t) = (6t + 6(t - 1) + 6(t - 2) + ... + 6(1)) - 2t\\) \\(h(t) = 6(1 + 2 + 3 + ... + (t - 1) + t) - 2t\\) \\(h(t) = 6(\\frac{t(t + 1)}{2}) - 2t\\) \\(h(t) = 3t(t + 1) - 2t\\) \\(h(t) = 3t^2 + 3t - 2t\\) \\(\\therefore h(t) = 3t^2 + t\\)</p> </li> </ul> <p>\u0e08\u0e30\u0e44\u0e14\u0e49\u0e2a\u0e21\u0e01\u0e32\u0e23\u0e04\u0e33\u0e19\u0e27\u0e13\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e39\u0e07 \u0e13 \\(t\\) \u0e43\u0e14\u0e46 \u0e40\u0e1b\u0e47\u0e19: \\(3t^2 + t\\)</p>"},{"location":"problems/posn1_67_bkk_p3/#code","title":"Code","text":"astronaut.c<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    int t; \n    scanf(\"%d\", &amp;t);\n    printf(\"%d\", 3*t*t + t);\n    return 0;\n}\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f  </p>"},{"location":"problems/posn1_67_bkk_p4/","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2567 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 4","text":""},{"location":"problems/posn1_67_bkk_p4/#problem","title":"Problem","text":""},{"location":"problems/posn1_67_bkk_p4/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e23\u0e31\u0e1a\u0e04\u0e48\u0e32\u0e27\u0e31\u0e19\u0e02\u0e2d\u0e07\u0e27\u0e31\u0e19\u0e2a\u0e34\u0e49\u0e19\u0e1b\u0e35 \u0e41\u0e25\u0e49\u0e27\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25\u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e27\u0e31\u0e19\u0e41\u0e21\u0e48\u0e40\u0e40\u0e2b\u0e48\u0e07\u0e0a\u0e32\u0e15\u0e34\u0e43\u0e19\u0e1b\u0e35\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19 (1 \u0e04\u0e37\u0e2d\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c \u0e44\u0e25\u0e48\u0e44\u0e1b\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e22\u0e46\u0e08\u0e19\u0e16\u0e36\u0e07 7 \u0e04\u0e37\u0e2d\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c)</p>"},{"location":"problems/posn1_67_bkk_p4/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2b\u0e32\u0e27\u0e31\u0e19\u0e41\u0e21\u0e48\u0e41\u0e2b\u0e48\u0e07\u0e0a\u0e32\u0e15\u0e34\u0e43\u0e19\u0e1b\u0e35\u0e19\u0e31\u0e49\u0e19</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07</p> Input Output 3 2 <p>Prerequisites</p> <ul> <li>Math</li> </ul>"},{"location":"problems/posn1_67_bkk_p4/#solution","title":"Solution","text":""},{"location":"problems/posn1_67_bkk_p4/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e2b\u0e32\u0e01\u0e25\u0e2d\u0e07\u0e44\u0e25\u0e48\u0e19\u0e31\u0e1a\u0e08\u0e33\u0e19\u0e27\u0e19\u0e27\u0e31\u0e19 \u0e08\u0e30\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32 \u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e27\u0e31\u0e19\u0e41\u0e21\u0e48 \u0e16\u0e36\u0e07\u0e27\u0e31\u0e19\u0e2a\u0e34\u0e49\u0e19\u0e1b\u0e35 \u0e08\u0e30\u0e21\u0e35\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14 141 \u0e27\u0e31\u0e19 \u0e19\u0e31\u0e48\u0e19\u0e04\u0e37\u0e2d \u0e2b\u0e32\u0e01\u0e40\u0e23\u0e32\u0e25\u0e1a 141 \u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e21\u0e32 \u0e41\u0e25\u0e49\u0e27\u0e2b\u0e32\u0e40\u0e28\u0e29\u0e17\u0e35\u0e48\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e23\u0e14\u0e49\u0e27\u0e22 7 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e44\u0e14\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e27\u0e31\u0e19\u0e43\u0e19\u0e2a\u0e31\u0e1b\u0e14\u0e32\u0e2b\u0e4c\u0e02\u0e2d\u0e07\u0e27\u0e31\u0e19\u0e19\u0e31\u0e49\u0e19</p> <p>\u0e0b\u0e36\u0e48\u0e07\u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15\u0e27\u0e48\u0e32 141 \u0e08\u0e30\u0e2a\u0e21\u0e20\u0e32\u0e04\u0e01\u0e31\u0e1a 1 \u0e20\u0e32\u0e22\u0e43\u0e15\u0e49\u0e21\u0e2d\u0e14\u0e38\u0e42\u0e25 7 (\u0e08\u0e33\u0e19\u0e27\u0e19\u0e27\u0e31\u0e19\u0e43\u0e19\u0e2a\u0e31\u0e1b\u0e14\u0e32\u0e2b\u0e4c)</p> <p>\u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19 \u0e08\u0e32\u0e01 Observation \u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e04\u0e33\u0e19\u0e27\u0e13\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16 -1 \u0e04\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19 \u0e41\u0e25\u0e49\u0e27\u0e15\u0e2d\u0e1a\u0e44\u0e14\u0e49\u0e40\u0e25\u0e22 \u0e41\u0e15\u0e48\u0e41\u0e04\u0e48\u0e40\u0e02\u0e35\u0e22\u0e19 <code>if-else</code> \u0e14\u0e31\u0e01\u0e40\u0e2d\u0e32\u0e44\u0e27\u0e49 \u0e01\u0e23\u0e13\u0e35\u0e17\u0e35\u0e48\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e23\u0e31\u0e1a\u0e21\u0e32\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a 1 \u0e40\u0e21\u0e37\u0e48\u0e2d -1 \u0e08\u0e30\u0e40\u0e2b\u0e25\u0e37\u0e2d 0 \u0e40\u0e23\u0e32\u0e01\u0e47\u0e41\u0e04\u0e48\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e15\u0e2d\u0e1a\u0e44\u0e1b\u0e40\u0e1b\u0e47\u0e19 7 \u0e19\u0e31\u0e48\u0e19\u0e40\u0e2d\u0e07\u0e04\u0e23\u0e31\u0e1a</p>"},{"location":"problems/posn1_67_bkk_p4/#code","title":"Code","text":"miss_mom.c<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    int n;\n    scanf(\"%d\", &amp;n);\n    if (n == 1) printf(\"7\");\n    else printf(\"%d\", n - 1);\n    return 0;\n}\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f  </p>"},{"location":"problems/posn1_67_bkk_p5/","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2567 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 5","text":""},{"location":"problems/posn1_67_bkk_p5/#problem-credit-card","title":"Problem: Credit Card","text":""},{"location":"problems/posn1_67_bkk_p5/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e40\u0e23\u0e32\u0e21\u0e35\u0e40\u0e25\u0e02\u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15 16 \u0e2b\u0e25\u0e31\u0e01 \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e40\u0e25\u0e02\u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15\u0e27\u0e48\u0e32 \u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48</p> <p>\u0e42\u0e14\u0e22\u0e21\u0e35\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49: \u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07: 5490123456789128</p> <ol> <li>\u0e19\u0e33\u0e40\u0e25\u0e02\u0e2b\u0e25\u0e31\u0e01\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\u0e2d\u0e2d\u0e01 (549012345678912)</li> <li>reverse \u0e15\u0e31\u0e27\u0e40\u0e25\u0e02 \u0e41\u0e25\u0e49\u0e27 \u0e04\u0e39\u0e13 2 \u0e01\u0e31\u0e1a\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e43\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e35\u0e48     (2 1 9 8 7 6 5 4 3 2 1 0 9 4 5 -&gt; 4 1 18 8 14 6 10 4 6 2 2 0 18 4 10)</li> <li>\u0e41\u0e1a\u0e48\u0e07\u0e40\u0e25\u0e02\u0e2a\u0e2d\u0e07\u0e2b\u0e25\u0e31\u0e01\u0e43\u0e14\u0e46 \u0e43\u0e2b\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e40\u0e14\u0e35\u0e22\u0e27 2 \u0e15\u0e31\u0e27 \u0e40\u0e0a\u0e48\u0e19 18 -&gt; 1, 8     (4 1 18 8 14 6 10 4 6 2 2 0 18 4 10 -&gt; 4 1 1 8 8 1 4 6 1 0 4 6 2 2 0 1 8 4 1 0)</li> <li>\u0e2b\u0e32\u0e1c\u0e25\u0e23\u0e27\u0e21\u0e40\u0e25\u0e02\u0e17\u0e38\u0e01\u0e15\u0e31\u0e27     (4 + 1 + 1 + 8 + 8 + 1 + 4 + 6 + 1 + 0 + 4 + 6 + 2 + 2 + 0 + 1 + 8 + 4 + 1 + 0 = 62)</li> <li>\u0e16\u0e49\u0e32\u0e40\u0e25\u0e02\u0e2b\u0e25\u0e31\u0e01\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\u0e02\u0e2d\u0e07\u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15\u0e04\u0e37\u0e2d (10 - (\u0e1c\u0e25\u0e23\u0e27\u0e21 mod 10)) mod 10 \u0e41\u0e25\u0e49\u0e27 \u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15\u0e43\u0e1a\u0e19\u0e35\u0e49 \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15\u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07     ((10 - (62 mod 10)) mod 10 = 8 \u0e0b\u0e36\u0e48\u0e07\u0e15\u0e23\u0e07\u0e01\u0e31\u0e1a\u0e2b\u0e25\u0e31\u0e01\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\u0e02\u0e2d\u0e07 5490123456789128)</li> </ol>"},{"location":"problems/posn1_67_bkk_p5/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e27\u0e48\u0e32 \u0e40\u0e25\u0e02\u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15\u0e17\u0e35\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e43\u0e2b\u0e49 \u0e40\u0e1b\u0e47\u0e19\u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15\u0e08\u0e23\u0e34\u0e07\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07</p> Input Output 5490123456789128 yes 5647373649364392 no <p>Prerequisites</p> <ul> <li>Arrays</li> <li>Strings</li> </ul>"},{"location":"problems/posn1_67_bkk_p5/#solution","title":"Solution","text":""},{"location":"problems/posn1_67_bkk_p5/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e23\u0e31\u0e1a Input \u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19 String \u0e41\u0e25\u0e49\u0e27\u0e41\u0e1b\u0e25\u0e07\u0e40\u0e1b\u0e47\u0e19 Array \u0e42\u0e14\u0e22\u0e41\u0e15\u0e48\u0e25\u0e30\u0e0a\u0e48\u0e2d\u0e07\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e41\u0e15\u0e48\u0e25\u0e30\u0e2b\u0e25\u0e31\u0e01 \u0e41\u0e25\u0e49\u0e27\u0e01\u0e47\u0e17\u0e33\u0e15\u0e32\u0e21\u0e02\u0e31\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e43\u0e2b\u0e49\u0e42\u0e14\u0e22\u0e15\u0e23\u0e07\u0e40\u0e25\u0e22</p> <p>\u0e40\u0e23\u0e35\u0e22\u0e07\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e41\u0e15\u0e48\u0e25\u0e30\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19:</p> <ol> <li>\u0e41\u0e1b\u0e25\u0e07 Input \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 String \u0e40\u0e1b\u0e47\u0e19 Array</li> <li>\u0e44\u0e21\u0e48\u0e08\u0e33\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e25\u0e31\u0e1a\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e25\u0e02\u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15 \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e04\u0e39\u0e13 2 \u0e43\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e39\u0e48\u0e41\u0e17\u0e19\u0e01\u0e32\u0e23\u0e04\u0e39\u0e13\u0e43\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e35\u0e48\u0e44\u0e14\u0e49</li> <li>\u0e41\u0e25\u0e30 4. \u0e2b\u0e32\u0e1c\u0e25\u0e23\u0e27\u0e21\u0e02\u0e2d\u0e07\u0e40\u0e25\u0e02\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14 \u0e42\u0e14\u0e22\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e0a\u0e48\u0e2d\u0e07\u0e43\u0e14\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02 2 \u0e2b\u0e25\u0e31\u0e01 \u0e40\u0e23\u0e32\u0e01\u0e47\u0e41\u0e04\u0e48\u0e04\u0e34\u0e14\u0e41\u0e22\u0e01\u0e2b\u0e25\u0e31\u0e01 \u0e0b\u0e36\u0e48\u0e07\u0e2b\u0e25\u0e31\u0e01\u0e41\u0e23\u0e01\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19 1 \u0e41\u0e19\u0e48\u0e46 \u0e41\u0e25\u0e30\u0e43\u0e19\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e2b\u0e25\u0e31\u0e01\u0e2b\u0e19\u0e48\u0e27\u0e22 \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2b\u0e32\u0e44\u0e14\u0e49\u0e42\u0e14\u0e22\u0e01\u0e32\u0e23\u0e19\u0e33 \u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e19\u0e31\u0e49\u0e19 mod 10 \u0e44\u0e14\u0e49 \u0e19\u0e31\u0e48\u0e19\u0e04\u0e37\u0e2d \u0e2b\u0e32\u0e01\u0e40\u0e08\u0e2d\u0e40\u0e25\u0e02 2 \u0e2b\u0e25\u0e31\u0e01 \u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e04\u0e37\u0e2d 1 + (num mod 10)</li> <li>\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e15\u0e32\u0e21\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02\u0e02\u0e2d\u0e07\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e27\u0e48\u0e32 (10 - (\u0e1c\u0e25\u0e23\u0e27\u0e21 mod 10)) mod 10 \u0e21\u0e35\u0e04\u0e48\u0e32\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a\u0e2b\u0e25\u0e31\u0e01\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48 \u0e41\u0e25\u0e49\u0e27\u0e01\u0e47\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19 \"yes\" \u0e2b\u0e23\u0e37\u0e2d \"no\" \u0e15\u0e32\u0e21\u0e17\u0e35\u0e48\u0e40\u0e0a\u0e47\u0e01\u0e44\u0e14\u0e49</li> </ol>"},{"location":"problems/posn1_67_bkk_p5/#code","title":"Code","text":"credit_card.c<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    char str[16];\n    scanf(\"%s\", str);\n\n    // \u0e19\u0e33\u0e04\u0e48\u0e32\u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30\u0e2b\u0e25\u0e31\u0e01\u0e21\u0e32\u0e40\u0e01\u0e47\u0e1a\u0e43\u0e19 Array\n    int a[16];\n    for (int i = 0; i &lt; 16; i++) {\n        a[i] = str[i] - '0';\n    }\n\n    // \u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e48 2, 3 \u0e41\u0e25\u0e30 4: x2 \u0e43\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e39\u0e48 \u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e01\u0e31\u0e1a\u0e2b\u0e32\u0e1c\u0e25\u0e23\u0e27\u0e21\n    int sum = 0;\n    for (int i = 0; i &lt; 15; i++) {\n        if (i % 2 == 0) a[i] *= 2;\n        // \u0e16\u0e49\u0e32\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e19\u0e31\u0e49\u0e19\u0e46 \u0e21\u0e35 2 \u0e2b\u0e25\u0e31\u0e01 \u0e43\u0e2b\u0e49\u0e08\u0e31\u0e1a\u0e41\u0e22\u0e01\u0e40\u0e1b\u0e47\u0e19 2 \u0e2b\u0e25\u0e31\u0e01\n        if (a[i] &gt; 9) {\n            // \u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15\u0e27\u0e48\u0e32 \u0e16\u0e49\u0e32\u0e08\u0e33\u0e19\u0e27\u0e19\u0e19\u0e35\u0e49\u0e21\u0e35 2 \u0e2b\u0e25\u0e31\u0e01 \u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e43\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e2a\u0e34\u0e1a \u0e40\u0e1b\u0e47\u0e19\u0e44\u0e14\u0e49\u0e41\u0e04\u0e48 1 \u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19\u0e40\u0e23\u0e32\u0e08\u0e30 +1 \u0e41\u0e25\u0e49\u0e27\u0e2b\u0e32\u0e04\u0e48\u0e32\u0e43\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e2b\u0e19\u0e48\u0e27\u0e22\u0e42\u0e14\u0e22\u0e01\u0e32\u0e23\u0e19\u0e33\u0e04\u0e48\u0e32\u0e21\u0e32\u0e2b\u0e32\u0e40\u0e28\u0e29\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e23\u0e14\u0e49\u0e27\u0e22 10\n            sum += 1 + (a[i] % 10);\n        }\n        else sum += a[i];\n    }\n\n    // \u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e15\u0e32\u0e21\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e17\u0e35\u0e48 5\n    if ((10 - (sum % 10)) % 10 == a[15]) {\n        printf(\"yes\");\n    }\n    else {\n        printf(\"no\");\n    }\n    return 0;\n}\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f  </p>"},{"location":"problems/toi20_bit_string/","title":"Bitmask DP &amp; toi20_bit_string","text":""},{"location":"problems/toi20_bit_string/#problem","title":"Problem","text":""},{"location":"problems/toi20_bit_string/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e40\u0e23\u0e32\u0e21\u0e35 Binary String (\u0e2a\u0e15\u0e23\u0e34\u0e07\u0e17\u0e35\u0e48\u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e14\u0e49\u0e27\u0e22 '1' \u0e41\u0e25\u0e30 '0' \u0e40\u0e17\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19) \u0e04\u0e27\u0e32\u0e21\u0e22\u0e32\u0e27 \\(N\\) \u0e0b\u0e36\u0e48\u0e07\u0e2b\u0e32\u0e01\u0e40\u0e23\u0e32\u0e1e\u0e34\u0e08\u0e32\u0e23\u0e13\u0e32 String \u0e04\u0e27\u0e32\u0e21\u0e22\u0e32\u0e27 \\(N\\) \u0e17\u0e38\u0e01\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a \u0e08\u0e30\u0e1e\u0e1a\u0e27\u0e48\u0e32\u0e21\u0e35 \\(2^N\\) \u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a \u0e42\u0e14\u0e22\u0e41\u0e15\u0e48\u0e25\u0e30\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a \u0e08\u0e30\u0e21\u0e35\u0e04\u0e48\u0e32\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01 \\(C_i\\)</p> <p>\u0e01\u0e32\u0e23\u0e25\u0e14\u0e17\u0e2d\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19 '1' \u0e40\u0e1b\u0e47\u0e19 '0' \u0e0b\u0e36\u0e48\u0e07\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e17\u0e33\u0e44\u0e14\u0e49 2 \u0e27\u0e34\u0e18\u0e35</p> <ol> <li>\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19 '1' \u0e40\u0e1b\u0e47\u0e19 '0'</li> <li>\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19 '11' (\u0e2d\u0e31\u0e01\u0e02\u0e23\u0e30 '1' \u0e2a\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e15\u0e34\u0e14\u0e01\u0e31\u0e19) \u0e40\u0e1b\u0e47\u0e19 '00' (\u0e2d\u0e31\u0e01\u0e02\u0e23\u0e30 '0' \u0e2a\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e15\u0e34\u0e14\u0e01\u0e31\u0e19)</li> </ol> <p>\u0e42\u0e14\u0e22\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e44\u0e14\u0e49 Binary String \u0e43\u0e2b\u0e21\u0e48\u0e17\u0e35\u0e48\u0e40\u0e01\u0e34\u0e14\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19 '1' \u0e40\u0e1b\u0e47\u0e19 '0' \u0e40\u0e23\u0e32\u0e08\u0e30\u0e1a\u0e27\u0e01\u0e04\u0e48\u0e32\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e02\u0e2d\u0e07 Binary String \u0e43\u0e19\u0e02\u0e13\u0e30\u0e19\u0e31\u0e49\u0e19 \u0e44\u0e1b\u0e01\u0e31\u0e1a \"\u0e04\u0e48\u0e32\u0e25\u0e14\u0e17\u0e2d\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e\" \u0e41\u0e25\u0e49\u0e27 Operation \u0e19\u0e35\u0e49 \u0e08\u0e30\u0e08\u0e1a\u0e25\u0e07\u0e40\u0e21\u0e37\u0e48\u0e2d String \u0e01\u0e25\u0e32\u0e22\u0e40\u0e1b\u0e47\u0e19 \"00000........0\" \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e23\u0e32\u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e43\u0e2b\u0e49 \u0e04\u0e48\u0e32\u0e25\u0e14\u0e17\u0e2d\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e \u0e04\u0e48\u0e32\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14</p>"},{"location":"problems/toi20_bit_string/#_2","title":"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e25\u0e14\u0e17\u0e2d\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e","text":"<p>\\(N = 3\\) \\(001 = 9\\) \\(000 = 0\\) \\(100 = 9\\) \\(010 = 1\\) \\(101 = 1\\) \\(110 = 2\\) \\(111 = 3\\) \\(011 = 1\\)</p> <p>Binary String \u0e17\u0e35\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e43\u0e2b\u0e49: \\(111\\)</p> <p>\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19: \u0e04\u0e48\u0e32\u0e25\u0e14\u0e17\u0e2d\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e \u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e17\u0e35\u0e48 \\(C_{111}\\) = 3</p> <ol> <li>111 -&gt; 011 : \\(ans\\) \u0e40\u0e1e\u0e34\u0e48\u0e21\u0e44\u0e1b \\(C_{011}\\) = 1 -&gt; 4</li> <li>011 -&gt; 001 : \\(ans\\) \u0e40\u0e1e\u0e34\u0e48\u0e21\u0e44\u0e1b \\(C_{001}\\) = 9 -&gt; 13</li> </ol> <p>\u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19 \u0e04\u0e33\u0e15\u0e2d\u0e1a\u0e02\u0e2d\u0e07 Binary String \\(111\\) \u0e04\u0e37\u0e2d 13</p> <p>\u0e42\u0e14\u0e22\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e08\u0e30\u0e01\u0e33\u0e2b\u0e19\u0e14 Binary String \u0e21\u0e32\u0e43\u0e2b\u0e49 \\(Q\\) \u0e2d\u0e31\u0e19 \u0e41\u0e25\u0e30\u0e43\u0e2b\u0e49\u0e15\u0e2d\u0e1a\u0e43\u0e2b\u0e49\u0e04\u0e23\u0e1a</p>"},{"location":"problems/toi20_bit_string/#_3","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2b\u0e32 \u0e04\u0e48\u0e32\u0e25\u0e14\u0e17\u0e2d\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e \u0e17\u0e35\u0e48\u0e21\u0e35\u0e04\u0e48\u0e32\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a Binary String \u0e17\u0e31\u0e49\u0e07 \\(Q\\) \u0e2d\u0e31\u0e19</p> <p>Constraints</p> <ul> <li>\\(2 \\leq N \\leq 20\\)</li> <li>\\(-500,000 \\leq C_i \\leq 1,000,000\\)</li> </ul> <p>Prerequisites</p> <ul> <li>Bitmasks</li> <li>Dynamic Programming</li> </ul>"},{"location":"problems/toi20_bit_string/#bitmask-dp","title":"Bitmask DP","text":"<p>\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e19\u0e35\u0e49 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e43\u0e0a\u0e49\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 Bitmask DP \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e01\u0e32\u0e23\u0e17\u0e33 Dynamic Programming \u0e17\u0e35\u0e48\u0e08\u0e30\u0e04\u0e48\u0e2d\u0e19\u0e02\u0e49\u0e32\u0e07\u0e1e\u0e34\u0e2a\u0e14\u0e32\u0e23\u0e40\u0e25\u0e47\u0e01\u0e19\u0e49\u0e2d\u0e22</p> <p>\u0e42\u0e14\u0e22 Bitmask DP \u0e19\u0e31\u0e49\u0e19 \u0e25\u0e31\u0e01\u0e29\u0e13\u0e30\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e40\u0e25\u0e48\u0e19\u0e01\u0e31\u0e1a \u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e2d\u0e07 \u0e0b\u0e36\u0e48\u0e07\u0e41\u0e17\u0e19\u0e17\u0e35\u0e48\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a DP \u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30 Index \u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a DP \u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30 Mask (\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e2d\u0e07) \u0e41\u0e17\u0e19 \u0e19\u0e31\u0e48\u0e19\u0e04\u0e37\u0e2d \u0e40\u0e23\u0e32\u0e08\u0e30\u0e21\u0e35\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14 \\(2^N\\) Mask (\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e40\u0e25\u0e48\u0e19\u0e01\u0e31\u0e1a\u0e17\u0e38\u0e01\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e02\u0e2d\u0e07\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e2d\u0e07\u0e17\u0e35\u0e48\u0e21\u0e35 \\(N\\) \u0e2b\u0e25\u0e31\u0e01)</p> <p>\u0e42\u0e14\u0e22\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e2a\u0e48\u0e27\u0e19\u0e43\u0e2b\u0e0d\u0e48\u0e19\u0e31\u0e49\u0e19 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a State DP \u0e43\u0e19\u0e25\u0e31\u0e01\u0e29\u0e13\u0e30\u0e02\u0e2d\u0e07</p> <ul> <li>\\(dp[mask] =\\) \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e17\u0e33 operation \u0e1a\u0e32\u0e07\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e43\u0e2b\u0e49\u0e21\u0e32\u0e25\u0e07\u0e17\u0e35\u0e48 state \u0e17\u0e35\u0e48 \\(mask\\) \u0e44\u0e14\u0e49\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48</li> <li>\\(dp[mask] =\\) min/max value \u0e17\u0e35\u0e48\u0e08\u0e30\u0e19\u0e33\u0e1e\u0e32\u0e40\u0e23\u0e32\u0e21\u0e32\u0e22\u0e31\u0e07 state \u0e17\u0e35\u0e48 \\(mask\\)</li> </ul> <p>\u0e25\u0e31\u0e01\u0e29\u0e13\u0e30\u0e01\u0e32\u0e23\u0e17\u0e33 Bitmask DP \u0e17\u0e31\u0e48\u0e27\u0e44\u0e1b\u0e04\u0e37\u0e2d</p> <ol> <li>loop \u0e15\u0e32\u0e21\u0e17\u0e38\u0e01\u0e46 \\(mask\\) \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e44\u0e1b\u0e44\u0e14\u0e49 \\(O(2^N)\\)</li> <li>\u0e25\u0e39\u0e1b\u0e15\u0e32\u0e21\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27\u0e43\u0e19 \\(mask\\) \u0e19\u0e31\u0e49\u0e19 \u0e41\u0e25\u0e49\u0e27\u0e40\u0e0a\u0e47\u0e01\u0e27\u0e48\u0e32 \u0e2b\u0e32\u0e01\u0e2a\u0e31\u0e1a bit \u0e19\u0e31\u0e49\u0e19\u0e2d\u0e2d\u0e01 \\((1 &gt; 0)\\) \u0e41\u0e25\u0e49\u0e27 \\(dp\\) \u0e02\u0e2d\u0e07 state \u0e19\u0e31\u0e49\u0e19 \u0e40\u0e04\u0e22\u0e17\u0e33\u0e21\u0e32\u0e41\u0e25\u0e49\u0e27\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48 \u0e41\u0e25\u0e49\u0e27\u0e17\u0e33\u0e44\u0e14\u0e49\u0e21\u0e31\u0e49\u0e22 \u0e14\u0e31\u0e07\u0e23\u0e39\u0e1b\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07 (\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e17\u0e38\u0e01 bit \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 1 \u0e43\u0e2b\u0e49\u0e40\u0e1b\u0e47\u0e19 0 \u0e41\u0e25\u0e49\u0e27\u0e40\u0e0a\u0e47\u0e01)</li> </ol> <p>3. \u0e2b\u0e32\u0e01\u0e17\u0e33\u0e44\u0e14\u0e49 \u0e01\u0e47\u0e40\u0e2d\u0e32\u0e40\u0e02\u0e49\u0e32 cost function \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e19\u0e33\u0e21\u0e32\u0e43\u0e2a\u0e48\u0e43\u0e19 \\(dp[mask]\\) \u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19</p> <p>\u0e42\u0e14\u0e22\u0e43\u0e19\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e02\u0e49\u0e2d\u0e19\u0e35\u0e49 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e25\u0e31\u0e01\u0e29\u0e13\u0e30 DP \u0e40\u0e1b\u0e47\u0e19\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e17\u0e35\u0e48 2 \u0e19\u0e31\u0e48\u0e19\u0e04\u0e37\u0e2d \\(dp[mask] =\\) \u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e15\u0e48\u0e33\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e17\u0e35\u0e48\u0e08\u0e30\u0e19\u0e33\u0e40\u0e23\u0e32\u0e21\u0e32\u0e22\u0e31\u0e07 state \u0e17\u0e35\u0e48 \\(mask\\)</p>"},{"location":"problems/toi20_bit_string/#solution","title":"Solution","text":""},{"location":"problems/toi20_bit_string/#_4","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e01\u0e48\u0e2d\u0e19\u0e2d\u0e37\u0e48\u0e19 \u0e40\u0e23\u0e32\u0e01\u0e47\u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e23\u0e31\u0e1a input \u0e27\u0e48\u0e32 \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e41\u0e15\u0e48\u0e25\u0e30 \\(mask\\) \u0e04\u0e48\u0e32\u0e25\u0e14\u0e17\u0e2d\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e\u0e02\u0e2d\u0e07\u0e21\u0e31\u0e19\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48 \u0e40\u0e23\u0e32\u0e01\u0e47\u0e08\u0e30\u0e23\u0e31\u0e1a input \u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19 Binary String \u0e41\u0e25\u0e49\u0e27\u0e01\u0e47\u0e40\u0e02\u0e49\u0e32 function \\(binary\\) \u0e17\u0e35\u0e48\u0e40\u0e02\u0e35\u0e22\u0e19\u0e44\u0e27\u0e49 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e41\u0e1b\u0e25\u0e07 Binary String \u0e40\u0e1b\u0e47\u0e19 \u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e34\u0e1a</p> <p>\u0e2b\u0e25\u0e31\u0e01\u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19 \u0e40\u0e23\u0e32\u0e01\u0e47\u0e41\u0e04\u0e48\u0e19\u0e33\u0e44\u0e2d\u0e40\u0e14\u0e35\u0e22\u0e02\u0e2d\u0e07 Bitmask DP \u0e14\u0e49\u0e32\u0e19\u0e1a\u0e19 \u0e25\u0e07\u0e21\u0e32\u0e43\u0e0a\u0e49 \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e27\u0e48\u0e32 \u0e04\u0e33\u0e15\u0e2d\u0e1a\u0e17\u0e35\u0e48\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a \\(dp[mask]\\) \u0e40\u0e1b\u0e47\u0e19\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48 \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e08\u0e30 Loop \u0e44\u0e1b\u0e17\u0e38\u0e01\u0e46 \\(mask\\) (\u0e19\u0e31\u0e48\u0e19\u0e04\u0e37\u0e2d \u0e27\u0e19 \\(2^N\\) \u0e23\u0e2d\u0e1a) \u0e42\u0e14\u0e22\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e41\u0e15\u0e48\u0e25\u0e30 \\(mask\\) \u0e08\u0e30\u0e04\u0e33\u0e19\u0e27\u0e13\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49: Loop \u0e04\u0e23\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48 1 (\u0e2a\u0e31\u0e1a\u0e2d\u0e2d\u0e01 1 bit)</p> <ul> <li>\u0e40\u0e0a\u0e47\u0e01\u0e41\u0e15\u0e48\u0e25\u0e30 index \u0e27\u0e48\u0e32 \\(mask\\) \u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19\u0e43\u0e19\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48 \\(i\\) \u0e40\u0e1b\u0e47\u0e19 1 \u0e2b\u0e23\u0e37\u0e2d 0</li> <li>\u0e2b\u0e32\u0e01\u0e40\u0e1b\u0e47\u0e19 0 \u0e01\u0e47\u0e02\u0e49\u0e32\u0e21  </li> <li>\u0e2b\u0e32\u0e01\u0e40\u0e1b\u0e47\u0e19 1 \u0e43\u0e2b\u0e49\u0e40\u0e2d\u0e32 bit \u0e19\u0e31\u0e49\u0e19\u0e40\u0e1b\u0e47\u0e19 0 (\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 \\(nm\\) \u0e22\u0e48\u0e2d\u0e08\u0e32\u0e01 \\(new mask\\)) \u0e41\u0e25\u0e49\u0e27\u0e01\u0e47       \u0e40\u0e01\u0e47\u0e1a \\(dp[mask] = \\max(dp[mask], dp[nm] + a[mask])\\) \u0e0b\u0e36\u0e48\u0e07\u0e04\u0e37\u0e2d cost function \u0e02\u0e2d\u0e07\u0e40\u0e23\u0e32</li> </ul> <p>Loop \u0e04\u0e23\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48 2 (\u0e2a\u0e31\u0e1a\u0e2d\u0e2d\u0e01 2 bit)</p> <ul> <li>\u0e40\u0e0a\u0e47\u0e01\u0e41\u0e15\u0e48\u0e25\u0e30 index \u0e27\u0e48\u0e32 \\(mask\\) \u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19\u0e43\u0e19\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48 \\(i\\) \u0e41\u0e25\u0e30 \\(i+1\\) \u0e40\u0e1b\u0e47\u0e19 1 \u0e2b\u0e23\u0e37\u0e2d 0</li> <li>\u0e2b\u0e32\u0e01\u0e2a\u0e31\u0e01\u0e2d\u0e31\u0e19\u0e40\u0e1b\u0e47\u0e19 0 \u0e01\u0e47\u0e02\u0e49\u0e32\u0e21  </li> <li>\u0e2b\u0e32\u0e01\u0e40\u0e1b\u0e47\u0e19 1 \u0e17\u0e31\u0e49\u0e07\u0e04\u0e39\u0e48 \u0e43\u0e2b\u0e49\u0e40\u0e2d\u0e32\u0e17\u0e31\u0e49\u0e07\u0e2a\u0e2d\u0e07 bit \u0e19\u0e31\u0e49\u0e19\u0e40\u0e1b\u0e47\u0e19 0 (\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 \\(nm\\) \u0e22\u0e48\u0e2d\u0e08\u0e32\u0e01 \\(new mask\\)) \u0e41\u0e25\u0e49\u0e27\u0e01\u0e47       \u0e40\u0e01\u0e47\u0e1a \\(dp[mask] = \\max(dp[mask], dp[nm] + a[mask])\\)</li> </ul> <p>\u0e41\u0e25\u0e49\u0e27\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e23\u0e31\u0e1a\u0e04\u0e33\u0e16\u0e32\u0e21\u0e21\u0e32 \u0e40\u0e23\u0e32\u0e01\u0e47\u0e41\u0e04\u0e48\u0e2a\u0e48\u0e07 Output \u0e44\u0e1b\u0e40\u0e1b\u0e47\u0e19 \\(dp[input]\\) \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e41\u0e15\u0e48\u0e25\u0e30\u0e2d\u0e34\u0e19\u0e1e\u0e38\u0e15\u0e44\u0e14\u0e49\u0e40\u0e25\u0e22</p>"},{"location":"problems/toi20_bit_string/#code","title":"Code","text":"toi20_bit_string.cpp<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst long long mod = 1e9 + 7;\nconst long long inf = 1e18;\n\nlong long binary(string s){\n    long long ans = 0;\n    reverse(all(s));\n    for (long long i = 0; i &lt; s.length(); i++) {\n        ans += (s[i] - '0') * (1 &lt;&lt; i);\n    }\n    return ans;\n}\n\nint32_t main(){\n    cin.tie(NULL)-&gt;sync_with_stdio(false);\n    long long n, q; cin &gt;&gt; n &gt;&gt; q;\n    vector &lt;long long&gt; a(1 &lt;&lt; n);\n    for (long long i = 0; i &lt; (1 &lt;&lt; n); i++) {\n        string s; cin &gt;&gt; s;\n        long long num; cin &gt;&gt; num;\n        a[binary(s)] = num;\n    }\n    vector &lt;long long&gt; dp(1 &lt;&lt; n, -inf); dp[0] = 0;\n    for (long long mask = 1; mask &lt; (1 &lt;&lt; n); mask++) {\n        // swap 1 bit\n        for (long long i = 0; i &lt; n; i++) {\n            if ((mask &amp; (1 &lt;&lt; i)) == 0) continue;\n            long long nm = mask ^ (1 &lt;&lt; i);\n            dp[mask] = max(dp[mask], dp[nm] + a[mask]);\n        }\n        // swap 2 bits\n        for (long long i = 0; i &lt; n - 1; i++) {\n            if ((mask &amp; (1 &lt;&lt; i)) == 0 || (mask &amp; (1 &lt;&lt; (i + 1))) == 0) continue;\n            long long nm = mask ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; (i + 1));\n            dp[mask] = max(dp[mask], dp[nm] + a[mask]);\n        }\n    }\n    while (q--) {\n        string s; cin &gt;&gt; s;\n        cout &lt;&lt; dp[binary(s)] &lt;&lt; \"\\n\";\n    }\n}\n</code></pre> <p>Total Time Complexity</p> <p>\\(O(2^N \\cdot N)\\)</p> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f  </p>"},{"location":"problems/toi20_crystal/","title":"toi21_crystal","text":"","tags":["TOI","LIS","Coordinate Compression","Hard"]},{"location":"problems/toi20_crystal/#problem","title":"Problem","text":"","tags":["TOI","LIS","Coordinate Compression","Hard"]},{"location":"problems/toi20_crystal/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e21\u0e35\u0e08\u0e31\u0e01\u0e23\u0e27\u0e32\u0e25\u0e2d\u0e22\u0e39\u0e48 $U$ \u0e08\u0e31\u0e01\u0e23\u0e27\u0e32\u0e25 \u0e41\u0e25\u0e30\u0e21\u0e35 Crystal $N$ \u0e2d\u0e31\u0e19 \u0e41\u0e15\u0e48\u0e25\u0e30\u0e2d\u0e31\u0e19\u0e21\u0e35</p> <ul> <li>$p[i]$: \u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07</li> <li>$w[i]$: \u0e08\u0e31\u0e01\u0e23\u0e27\u0e32\u0e25</li> <li>$t[i]$: \u0e40\u0e27\u0e25\u0e32</li> </ul> <p>\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e01\u0e47\u0e1a Crystal \u0e40\u0e23\u0e35\u0e22\u0e07\u0e15\u0e32\u0e21</p> <ol> <li>$p[i]$ \u0e08\u0e32\u0e01\u0e19\u0e49\u0e2d\u0e22\u0e44\u0e1b\u0e21\u0e32\u0e01</li> <li>$t[i]$ \u0e08\u0e32\u0e01\u0e19\u0e49\u0e2d\u0e22\u0e44\u0e1b\u0e21\u0e32\u0e01</li> </ol> <p>\u0e02\u0e13\u0e30\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e08\u0e31\u0e01\u0e23\u0e27\u0e32\u0e25 $j$ \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e17\u0e33\u0e44\u0e14\u0e49 1 \u0e2d\u0e22\u0e48\u0e32\u0e07 \u0e08\u0e32\u0e01 2 operations</p> <ol> <li>\u0e40\u0e01\u0e47\u0e1a Crystal \u0e43\u0e19\u0e08\u0e31\u0e01\u0e23\u0e27\u0e32\u0e25\u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19 (\u0e02\u0e49\u0e32\u0e21\u0e1a\u0e32\u0e07\u0e2d\u0e31\u0e19\u0e44\u0e14\u0e49)</li> <li>\u0e22\u0e49\u0e32\u0e22\u0e44\u0e1b\u0e08\u0e31\u0e01\u0e23\u0e27\u0e32\u0e25\u0e2d\u0e37\u0e48\u0e19 \u0e41\u0e15\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e2a\u0e35\u0e22 Crystal $K$ \u0e2d\u0e31\u0e19 (\u0e16\u0e49\u0e32\u0e21\u0e35\u0e40\u0e01\u0e47\u0e1a\u0e21\u0e32\u0e41\u0e25\u0e49\u0e27 $\\ge K$)</li> </ol> <p>\u0e42\u0e08\u0e17\u0e22\u0e4c: \u0e2b\u0e32\u0e27\u0e48\u0e32\u0e40\u0e01\u0e47\u0e1a Crystal \u0e44\u0e14\u0e49\u0e21\u0e32\u0e01\u0e2a\u0e38\u0e14\u0e40\u0e17\u0e48\u0e32\u0e44\u0e23</p> <p>Constraints</p> <p>$1 \\le U \\le 1000$ $0 \\le k \\le 1000$ $10 \\le N \\le 100,000$ $1 \\le p[i] \\le 10^9$ $0 \\le w &lt; U$ $1 \\le t[i] \\le 10^9$ \u0e41\u0e25\u0e30\u0e44\u0e21\u0e48\u0e21\u0e35\u0e04\u0e48\u0e32 $t[i]$ \u0e17\u0e35\u0e48\u0e0b\u0e49\u0e33\u0e01\u0e31\u0e19</p> <p>Prerequisites</p> <ul> <li>LIS (Longest Increasing Subsequence)</li> <li>Fenwick Tree</li> <li>Sweep Line</li> <li>Coordinate Compression</li> </ul>","tags":["TOI","LIS","Coordinate Compression","Hard"]},{"location":"problems/toi20_crystal/#solution","title":"Solution","text":"","tags":["TOI","LIS","Coordinate Compression","Hard"]},{"location":"problems/toi20_crystal/#_2","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32 \u0e16\u0e49\u0e32 $U = 1$ \u0e41\u0e25\u0e30 sort Crystal \u0e14\u0e49\u0e27\u0e22 $p[i]$ \u0e08\u0e32\u0e01\u0e19\u0e49\u0e2d\u0e22\u0e44\u0e1b\u0e21\u0e32\u0e01 \u0e08\u0e30\u0e40\u0e2b\u0e47\u0e19\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e2b\u0e32\u0e04\u0e27\u0e32\u0e21\u0e22\u0e32\u0e27 LIS \u0e18\u0e23\u0e23\u0e21\u0e14\u0e32 (\u0e15\u0e32\u0e21\u0e04\u0e48\u0e32 $t$)</p> <p>\u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19\u0e40\u0e23\u0e32\u0e08\u0e30\u0e21\u0e35 array <code>v</code> \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23 sort Crystal \u0e14\u0e49\u0e27\u0e22 $p_i$ \u0e08\u0e32\u0e01\u0e19\u0e49\u0e2d\u0e22\u0e44\u0e1b\u0e21\u0e32\u0e01 \u0e41\u0e25\u0e49\u0e27\u0e17\u0e33 sweep line \u0e15\u0e32\u0e21\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27\u0e02\u0e2d\u0e07 <code>v</code> (\u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01\u0e19\u0e35\u0e49\u0e01\u0e32\u0e23\u0e1e\u0e39\u0e14\u0e16\u0e36\u0e07 Crystal \u0e17\u0e35\u0e48 <code>i</code> \u0e2b\u0e21\u0e32\u0e22\u0e16\u0e36\u0e07 Crystal \u0e17\u0e35\u0e48 <code>i</code> \u0e02\u0e2d\u0e07 array <code>v</code>)</p> <p>\u0e2a\u0e21\u0e21\u0e15\u0e34\u0e27\u0e48\u0e32\u0e40\u0e23\u0e32\u0e2d\u0e22\u0e32\u0e01\u0e40\u0e01\u0e47\u0e1a Crystal \u0e17\u0e35\u0e48 <code>i</code> \u0e21\u0e35 2 case \u0e04\u0e37\u0e2d</p> <ul> <li>Crystal \u0e25\u0e48\u0e32\u0e2a\u0e38\u0e14\u0e01\u0e48\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e40\u0e01\u0e47\u0e1a Crystal <code>i</code> \u0e2d\u0e22\u0e39\u0e48\u0e08\u0e31\u0e01\u0e23\u0e27\u0e32\u0e25\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e1a Crystal <code>i</code></li> <li>Crystal \u0e25\u0e48\u0e32\u0e2a\u0e38\u0e14\u0e01\u0e48\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e40\u0e01\u0e47\u0e1a Crystal <code>i</code> \u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e2d\u0e22\u0e39\u0e48\u0e08\u0e31\u0e01\u0e23\u0e27\u0e32\u0e25\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e1a Crystal <code>i</code></li> </ul> <p>\u0e1e\u0e34\u0e08\u0e32\u0e23\u0e13\u0e32 case \u0e17\u0e35\u0e48 1 \u0e08\u0e30\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e2b\u0e32\u0e08\u0e33\u0e19\u0e27\u0e19 Crystal \u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 (\u0e43\u0e2b\u0e49 $c_1$ \u0e41\u0e17\u0e19\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49) \u0e42\u0e14\u0e22\u0e17\u0e35\u0e48 Crystal \u0e25\u0e48\u0e32\u0e2a\u0e38\u0e14\u0e01\u0e48\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e40\u0e01\u0e47\u0e1a Crystal <code>i</code> \u0e2d\u0e22\u0e39\u0e48\u0e08\u0e31\u0e01\u0e23\u0e27\u0e32\u0e25\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e1a Crystal <code>i</code> \u0e41\u0e25\u0e30 Crystal \u0e19\u0e31\u0e49\u0e19\u0e21\u0e35\u0e04\u0e48\u0e32 $t &lt; t[i]$.</p> <p>\u0e1e\u0e34\u0e08\u0e32\u0e23\u0e13\u0e32 case \u0e17\u0e35\u0e48 2 \u0e08\u0e30\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e2b\u0e32\u0e08\u0e33\u0e19\u0e27\u0e19 Crystal \u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 (\u0e43\u0e2b\u0e49 $c_2$ \u0e41\u0e17\u0e19\u0e04\u0e48\u0e32\u0e19\u0e35\u0e49) \u0e42\u0e14\u0e22\u0e17\u0e35\u0e48 Crystal \u0e25\u0e48\u0e32\u0e2a\u0e38\u0e14\u0e01\u0e48\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e40\u0e01\u0e47\u0e1a Crystal <code>i</code> \u0e2d\u0e22\u0e39\u0e48\u0e04\u0e19\u0e25\u0e30\u0e08\u0e31\u0e01\u0e23\u0e27\u0e32\u0e25\u0e01\u0e31\u0e1a Crystal <code>i</code> \u0e41\u0e25\u0e30 Crystal \u0e19\u0e31\u0e49\u0e19\u0e21\u0e35\u0e04\u0e48\u0e32 $t &lt; t[i]$.</p> <p>\u0e08\u0e30\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32 \u0e16\u0e49\u0e32\u0e40\u0e23\u0e32\u0e2d\u0e22\u0e32\u0e01\u0e40\u0e01\u0e47\u0e1a Crystal \u0e17\u0e35\u0e48 <code>i</code> \u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e44\u0e14\u0e49\u0e21\u0e32\u0e01\u0e2a\u0e38\u0e14\u0e04\u0e37\u0e2d $max(c_1, c_2 - k) + 1$.</p> <p>\u0e40\u0e2b\u0e47\u0e19\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32\u0e19\u0e35\u0e48\u0e01\u0e47\u0e04\u0e37\u0e2d\u0e42\u0e08\u0e17\u0e22\u0e4c LIS \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e08\u0e30\u0e43\u0e0a\u0e49 Fenwick tree \u0e40\u0e1b\u0e47\u0e19 data structure \u0e43\u0e19\u0e01\u0e32\u0e23\u0e17\u0e33 LIS (\u0e16\u0e49\u0e32\u0e44\u0e21\u0e48\u0e23\u0e39\u0e49\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e25\u0e2d\u0e07\u0e28\u0e36\u0e01\u0e29\u0e32\u0e08\u0e32\u0e01\u0e1a\u0e17\u0e04\u0e27\u0e32\u0e21\u0e19\u0e35\u0e49: Longest Increasing Subsequence using BIT \u2014 GeeksforGeeks) note: \u0e43\u0e19\u0e27\u0e34\u0e18\u0e35\u0e19\u0e35\u0e49\u0e08\u0e30\u0e43\u0e0a\u0e49 coordinate compression \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e08\u0e33\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e0a\u0e49</p>","tags":["TOI","LIS","Coordinate Compression","Hard"]},{"location":"problems/toi20_crystal/#code","title":"Code","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#define int long long\nusing namespace std;\n\nconst int mod = 1e9 + 7;\nconst int inf = 1e18;\nconst int N = 100000 + 5;\nconst int U = 1000 + 5;\n\nint u, k, n, ans;\nmap&lt;int,int&gt; com;\nset&lt;int&gt; ins;\ntuple&lt;int,int,int&gt; a[N]; // {t, w, p}\n\nstruct Fenwick {\n    int fw[N];\n    Fenwick() { fill(fw, fw+N, 0); }\n\n    void update(int idx, int val) {\n        while (idx &lt; N) {\n            fw[idx] = max(fw[idx], val);\n            idx += idx &amp; -idx;\n        }\n    }\n\n    int query(int idx) {\n        int res = 0;\n        while (idx &gt; 0) {\n            res = max(res, fw[idx]);\n            idx -= idx &amp; -idx;\n        }\n        return res;\n    }\n} fenwick[U];\n\nint32_t main() {\n    ios::sync_with_stdio(false);\n    cin.tie(NULL);\n\n    cin &gt;&gt; u &gt;&gt; k &gt;&gt; n;\n    for (int i = 1; i &lt;= n; i++) {\n        auto &amp;tp = a[i];\n        int p, w, t;\n        cin &gt;&gt; p &gt;&gt; w &gt;&gt; t;\n        // store as tuple {t, w, p} so sorting by tuple gives p-ascending then t-ascending if needed\n        a[i] = make_tuple(t, w, p);\n        ins.emplace(p);\n    }\n\n    vector&lt;int&gt; temp(ins.begin(), ins.end());\n    for (size_t i = 0; i &lt; temp.size(); ++i) {\n        com[temp[i]] = (int)i + 1;\n    }\n\n    sort(a + 1, a + 1 + n); // sorts by t, then w, then p because tuple is (t,w,p)\n\n    for (int i = 1; i &lt;= n; i++) {\n        int t, w, pp;\n        tie(t, w, pp) = a[i];\n        int p = com[pp];\n\n        int x1 = fenwick[w].query(p - 1) + 1;\n        int x2 = fenwick[U - 1].query(p - 1) + 1 - k;\n        int x  = max(x1, x2);\n\n        fenwick[U - 1].update(p, x);\n        fenwick[w].update(p, x);\n\n        ans = max(ans, x);\n    }\n\n    cout &lt;&lt; ans &lt;&lt; \"\\n\";\n    return 0;\n}\n</code></pre> <p>Total Time Complexity</p> <p>$O(n log n)$ (\u0e42\u0e14\u0e22\u0e23\u0e27\u0e21\u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23 sort \u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19 Fenwick tree \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e41\u0e15\u0e48\u0e25\u0e30 element)</p> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f \u0e28\u0e36\u0e01\u0e29\u0e32\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e40\u0e15\u0e34\u0e21\u0e44\u0e14\u0e49\u0e17\u0e35\u0e48 Fast X Fourier</p>","tags":["TOI","LIS","Coordinate Compression","Hard"]},{"location":"problems/toi20_lover/","title":"\u0e04\u0e33\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33\u0e1e\u0e23\u0e49\u0e2d\u0e21 code \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e02\u0e49\u0e2d  toi20_lover","text":"","tags":["TOI","DP","Hard"]},{"location":"problems/toi20_lover/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e21\u0e35 \\(N\\) \u0e23\u0e49\u0e32\u0e19(\\(N\\) \u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02\u0e04\u0e39\u0e48) \u0e42\u0e14\u0e22\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48 \\(i\\) \u0e21\u0e35\u0e23\u0e32\u0e04\u0e32 \\(x_i\\)</p> <p>\u0e42\u0e14\u0e22\u0e15\u0e49\u0e2d\u0e07\u0e41\u0e1a\u0e48\u0e07\u0e0a\u0e48\u0e27\u0e07\u0e01\u0e32\u0e23\u0e01\u0e34\u0e19\u0e02\u0e49\u0e32\u0e27\u0e40\u0e1b\u0e47\u0e19\u0e0a\u0e48\u0e27\u0e07\u0e46 \u0e2a\u0e21\u0e21\u0e15\u0e34\u0e27\u0e48\u0e32\u0e21\u0e35 \\(M\\) \u0e0a\u0e48\u0e27\u0e07 \u0e42\u0e14\u0e22\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e2b\u0e49 \\(l_1+l_2+\\cdots+l_M=N\\) \u0e41\u0e25\u0e30 \\(l_j\\) \u0e04\u0e37\u0e2d\u0e08\u0e33\u0e19\u0e27\u0e19\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48\u0e01\u0e34\u0e19\u0e43\u0e19\u0e0a\u0e48\u0e27\u0e07\u0e01\u0e32\u0e23\u0e01\u0e34\u0e19\u0e02\u0e49\u0e32\u0e07\u0e17\u0e35\u0e48 \\(j\\) \u0e41\u0e25\u0e30 \\(l_j\\) \u0e15\u0e49\u0e2d\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02\u0e04\u0e39\u0e48</p> <p>\u0e42\u0e14\u0e22\u0e0a\u0e48\u0e27\u0e07\u0e01\u0e32\u0e23\u0e01\u0e34\u0e19\u0e17\u0e35\u0e48 \\(1\\) \u0e08\u0e30\u0e40\u0e23\u0e34\u0e48\u0e21\u0e01\u0e34\u0e19\u0e08\u0e32\u0e01\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48 \\(1\\) \u0e44\u0e1b\u0e08\u0e19\u0e16\u0e36\u0e07\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48 \\(l_1\\) \u0e0a\u0e48\u0e27\u0e07\u0e01\u0e32\u0e23\u0e01\u0e34\u0e19\u0e17\u0e35\u0e48 \\(2\\) \u0e08\u0e30\u0e40\u0e23\u0e34\u0e48\u0e21\u0e01\u0e34\u0e19\u0e08\u0e32\u0e01\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48 \\(l_1+1\\) \u0e44\u0e1b\u0e08\u0e19\u0e16\u0e36\u0e07\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48 \\(l_1+l_2\\) \u0e0a\u0e48\u0e27\u0e07\u0e01\u0e32\u0e23\u0e01\u0e34\u0e19\u0e17\u0e35\u0e48 \\(j\\) \u0e08\u0e30\u0e40\u0e23\u0e34\u0e48\u0e21\u0e01\u0e34\u0e19\u0e08\u0e32\u0e01\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48 \\(l_1+l_2+\\cdots+l_{j-1}+1\\) \u0e44\u0e1b\u0e08\u0e19\u0e16\u0e36\u0e07\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48 \\(l_1+l_2+\\cdots+l_j\\)</p> <p>\u0e2a\u0e21\u0e21\u0e15\u0e34\u0e43\u0e2b\u0e49\u0e0a\u0e48\u0e27\u0e07\u0e01\u0e32\u0e23\u0e01\u0e34\u0e19\u0e17\u0e35\u0e48 \\(j\\) \u0e01\u0e34\u0e19\u0e08\u0e32\u0e01\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48 \\(p\\) \u0e44\u0e1b\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48 \\(q\\) \u0e42\u0e14\u0e22\u0e0a\u0e48\u0e27\u0e07\u0e01\u0e32\u0e23\u0e01\u0e34\u0e19\u0e08\u0e30\u0e41\u0e1a\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19 \\(2\\) \u0e23\u0e2d\u0e1a \u0e23\u0e2d\u0e1a\u0e41\u0e23\u0e01\u0e08\u0e30\u0e01\u0e34\u0e19\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48 \\(p\\) \u0e08\u0e19\u0e16\u0e36\u0e07\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48 \\(\\frac{p+q-1}{2}\\) \u0e41\u0e25\u0e30\u0e01\u0e34\u0e19\u0e40\u0e09\u0e1e\u0e32\u0e30\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48\u0e21\u0e35\u0e23\u0e32\u0e04\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02\u0e04\u0e35\u0e48  \u0e23\u0e2d\u0e1a\u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07\u0e08\u0e30\u0e01\u0e34\u0e19\u0e08\u0e32\u0e01\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48 \\(\\frac{p+q-1}{2}+1\\) \u0e08\u0e19\u0e16\u0e36\u0e07\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48 \\(q\\) \u0e41\u0e25\u0e30\u0e01\u0e34\u0e19\u0e40\u0e09\u0e1e\u0e32\u0e30\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48\u0e21\u0e35\u0e23\u0e32\u0e04\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02\u0e04\u0e39\u0e48</p> <p>\u0e43\u0e2b\u0e49\u0e1c\u0e25\u0e23\u0e27\u0e21\u0e23\u0e32\u0e04\u0e32\u0e17\u0e35\u0e48\u0e01\u0e34\u0e19\u0e44\u0e1b\u0e02\u0e2d\u0e07\u0e23\u0e2d\u0e1a\u0e41\u0e23\u0e01\u0e02\u0e2d\u0e07\u0e0a\u0e48\u0e27\u0e07\u0e17\u0e35\u0e48 \\(j\\) \u0e40\u0e1b\u0e47\u0e19 \\(a_j\\) \u0e41\u0e25\u0e30\u0e43\u0e2b\u0e49\u0e1c\u0e25\u0e23\u0e27\u0e21\u0e23\u0e32\u0e04\u0e32\u0e02\u0e2d\u0e07\u0e23\u0e2d\u0e1a\u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07\u0e17\u0e35\u0e48\u0e01\u0e34\u0e19\u0e44\u0e1b\u0e02\u0e2d\u0e07\u0e0a\u0e48\u0e27\u0e07\u0e17\u0e35\u0e48 \\(j\\) \u0e40\u0e1b\u0e47\u0e19 \\(b_j\\) \u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e2b\u0e49 \\(\\max(a_1,a_2,\\cdots,a_M)\\leq V\\) \u0e41\u0e25\u0e30 \\(\\max(b_1,b_2,\\cdots,b_M)\\leq W\\)</p> <p>\u0e43\u0e2b\u0e49\u0e2b\u0e32\u0e27\u0e48\u0e32 \\(M\\) \u0e21\u0e35\u0e04\u0e48\u0e32\u0e19\u0e49\u0e2d\u0e22\u0e2a\u0e38\u0e14\u0e04\u0e37\u0e2d\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48</p>","tags":["TOI","DP","Hard"]},{"location":"problems/toi20_lover/#prerequisites","title":"Prerequisites","text":"<ul> <li>Dynamic Programming</li> </ul>","tags":["TOI","DP","Hard"]},{"location":"problems/toi20_lover/#_2","title":"\u0e02\u0e2d\u0e1a\u0e40\u0e02\u0e15\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25","text":"<ul> <li>\\(2 \\leq N \\leq 10^4\\)</li> <li>\\(1\\leq V,W \\leq 10^9\\)</li> <li>\\(1 \\leq x_i \\leq 10^4\\)</li> </ul>","tags":["TOI","DP","Hard"]},{"location":"problems/toi20_lover/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32\u0e01\u0e32\u0e23\u0e17\u0e35\u0e48 \\(\\max(c_1,c_2,\\cdots,c_K)\\leq D\\) \u0e41\u0e1b\u0e25\u0e27\u0e48\u0e32 \\(c_j \\leq D\\) \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e17\u0e38\u0e01\u0e46 \\(1\\leq j\\leq K\\)</p> <p>\u0e08\u0e30\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32\u0e16\u0e49\u0e32\u0e43\u0e2b\u0e49 \\(dp[n]=\\) \u0e04\u0e48\u0e32 \\(M\\) \u0e17\u0e35\u0e48\u0e19\u0e49\u0e2d\u0e22\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e42\u0e14\u0e22\u0e17\u0e35\u0e48\u0e04\u0e34\u0e14\u0e41\u0e04\u0e48 \\(n\\) \u0e23\u0e49\u0e32\u0e19\u0e41\u0e23\u0e01 \u0e41\u0e25\u0e30\u0e0a\u0e48\u0e27\u0e07\u0e01\u0e32\u0e23\u0e01\u0e34\u0e19\u0e0a\u0e48\u0e27\u0e07\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\u0e08\u0e1a\u0e17\u0e35\u0e48\u0e23\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48 \\(n\\) \u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32 \\(\\displaystyle dp[n]=\\max_{\\substack{i&lt;n,\\space n-i \\space \\equiv \\space 0 \\pmod 2\\\\ \\text{\u0e42\u0e14\u0e22\u0e17\u0e35\u0e48\u0e1c\u0e25\u0e23\u0e27\u0e21\u0e23\u0e32\u0e04\u0e32\u0e17\u0e35\u0e48\u0e01\u0e34\u0e19\u0e44\u0e1b\u0e02\u0e2d\u0e07\u0e23\u0e2d\u0e1a\u0e41\u0e23\u0e01}\\leq V\\\\ \\text{\u0e42\u0e14\u0e22\u0e17\u0e35\u0e48\u0e1c\u0e25\u0e23\u0e27\u0e21\u0e23\u0e32\u0e04\u0e32\u0e17\u0e35\u0e48\u0e01\u0e34\u0e19\u0e44\u0e1b\u0e02\u0e2d\u0e07\u0e23\u0e2d\u0e1a\u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07}\\leq W}}dp[i]+1\\)</p> <p>\u0e16\u0e49\u0e32\u0e40\u0e23\u0e32\u0e43\u0e2b\u0e49 \\(p_{odd}[j]=\\) \u0e1c\u0e25\u0e23\u0e27\u0e21\u0e02\u0e2d\u0e07\u0e17\u0e38\u0e01\u0e46 \u0e23\u0e32\u0e04\u0e32\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e23\u0e32\u0e04\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02\u0e04\u0e35\u0e48\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e34\u0e14\u0e41\u0e04\u0e48 \\(j\\) \u0e23\u0e49\u0e32\u0e19\u0e41\u0e23\u0e01 \u0e41\u0e25\u0e30 \\(p_{even}[j]=\\) \u0e1c\u0e25\u0e23\u0e27\u0e21\u0e02\u0e2d\u0e07\u0e17\u0e38\u0e01\u0e46 \u0e23\u0e32\u0e04\u0e32\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e23\u0e32\u0e04\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02\u0e04\u0e39\u0e48\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e34\u0e14\u0e41\u0e04\u0e48 \\(j\\) \u0e23\u0e49\u0e32\u0e19\u0e41\u0e23\u0e01</p> <p>\u0e40\u0e23\u0e32\u0e08\u0e30\u0e43\u0e2b\u0e49 \\(mid=\\frac{n+i}{2}\\)</p> <p>\u0e40\u0e23\u0e32\u0e08\u0e30\u0e1e\u0e34\u0e08\u0e32\u0e23\u0e13\u0e32\u0e1c\u0e25\u0e23\u0e27\u0e21\u0e23\u0e32\u0e04\u0e32\u0e17\u0e35\u0e48\u0e01\u0e34\u0e19\u0e44\u0e1b\u0e02\u0e2d\u0e07\u0e23\u0e2d\u0e1a\u0e41\u0e23\u0e01\u0e01\u0e48\u0e2d\u0e19 \u0e19\u0e31\u0e48\u0e19\u0e01\u0e47\u0e04\u0e37\u0e2d \\(p_{odd}[mid]-p_{odd}[i]\\leq V\\) \u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19\u0e40\u0e23\u0e32\u0e08\u0e30\u0e1e\u0e34\u0e08\u0e32\u0e23\u0e13\u0e32\u0e1c\u0e25\u0e23\u0e27\u0e21\u0e23\u0e32\u0e04\u0e32\u0e17\u0e35\u0e48\u0e01\u0e34\u0e19\u0e44\u0e1b\u0e02\u0e2d\u0e07\u0e23\u0e2d\u0e1a\u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07 \u0e19\u0e31\u0e48\u0e19\u0e01\u0e47\u0e04\u0e37\u0e2d \\(p_{even}[n]-p_{even}[mid]\\leq W\\)</p> <p>\u0e0b\u0e36\u0e48\u0e07\u0e17\u0e31\u0e49\u0e07\u0e04\u0e39\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e0a\u0e47\u0e04\u0e44\u0e14\u0e49\u0e43\u0e19 \\(O(1)\\) \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e0a\u0e47\u0e04\u0e17\u0e38\u0e01\u0e46 \\(i&lt;n\\) \u0e17\u0e35\u0e48 \\(n-i \\space \\equiv \\space 0 \\pmod 2\\) \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a \\(dp[n]\\) \u0e0b\u0e36\u0e48\u0e07\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e0a\u0e47\u0e04 \\(O(N)\\) \u0e08\u0e38\u0e14 \u0e41\u0e25\u0e49\u0e27\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33 \\(dp[n]\\) \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e17\u0e38\u0e01\u0e46 \\(n&lt;N\\) \u0e08\u0e30\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32\u0e40\u0e27\u0e25\u0e32\u0e23\u0e27\u0e21\u0e17\u0e35\u0e48\u0e08\u0e33\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e0a\u0e49\u0e04\u0e37\u0e2d \\(O(N^2)\\)</p>","tags":["TOI","DP","Hard"]},{"location":"problems/toi20_lover/#solution-code","title":"Solution Code:","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n\nconst int inf = 1e9;\n\nint main(){\n    cin.tie(NULL)-&gt;sync_with_stdio(false);\n    int n, v, w; cin &gt;&gt; n &gt;&gt; v &gt;&gt; w;\n    vector&lt;int&gt; a(n + 1), p_odd(n + 1), p_even(n + 1);\n    for (int i = 1; i &lt;= n; i++) {\n        cin &gt;&gt; a[i];\n        p_odd[i] = p_odd[i - 1];\n        p_even[i] = p_even[i - 1];\n        if (a[i] % 2) p_odd[i] += a[i];\n        else p_even[i] += a[i];\n    }\n    vector&lt;int&gt; dp(n + 1, inf); dp[0] = 0;\n    for (int r = 2; r &lt;= n; r+=2) {\n        for (int l = r-2; l &gt;= 0; l-=2) {\n            int mid = (l+r)/2;\n            int vs = p_odd[mid] - p_odd[l],\n                ws = p_even[r] - p_even[mid];\n            if (vs &lt;= v &amp;&amp; ws &lt;= w) dp[r] = min(dp[r], dp[l] + 1);\n        }\n    }\n    cout &lt;&lt; (dp[n] == inf ? -1 : dp[n]);\n}\n</code></pre>","tags":["TOI","DP","Hard"]},{"location":"problems/toi20_lover/#time-complexity-on2","title":"Time Complexity: \\(O(N^2)\\)","text":"<p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f \u0e28\u0e36\u0e01\u0e29\u0e32\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e40\u0e15\u0e34\u0e21\u0e44\u0e14\u0e49\u0e17\u0e35\u0e48  Fast X Fourier</p>","tags":["TOI","DP","Hard"]},{"location":"problems/toi20_orbs/","title":"toi20_orbs","text":""},{"location":"problems/toi20_orbs/#problem","title":"Problem","text":""},{"location":"problems/toi20_orbs/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e21\u0e35\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27 \\(N\\) \u0e25\u0e39\u0e01 \u0e25\u0e39\u0e01\u0e17\u0e35\u0e48 \\(i\\) \u0e2b\u0e19\u0e31\u0e01 \\(w_i\\) \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e08\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e2a\u0e2d\u0e07\u0e25\u0e39\u0e01 \\(L\\) \u0e04\u0e23\u0e31\u0e49\u0e07 \u0e42\u0e14\u0e22\u0e43\u0e19\u0e17\u0e38\u0e01\u0e46\u0e04\u0e23\u0e31\u0e49\u0e07\u0e08\u0e30\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e17\u0e35\u0e48\u0e21\u0e35\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e40\u0e1b\u0e47\u0e19\u0e2d\u0e31\u0e19\u0e14\u0e31\u0e1a\u0e17\u0e35\u0e48 \\(a\\) \u0e40\u0e1b\u0e47\u0e19\u0e25\u0e39\u0e01\u0e41\u0e23\u0e01\u0e41\u0e25\u0e30\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e40\u0e1b\u0e47\u0e19\u0e2d\u0e31\u0e19\u0e14\u0e31\u0e1a\u0e17\u0e35\u0e48 \\(b\\) \u0e40\u0e1b\u0e47\u0e19\u0e25\u0e39\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07\u0e44\u0e1b\u0e43\u0e2a\u0e48\u0e43\u0e19\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e31\u0e01\u0e23</p> <p>\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e43\u0e2a\u0e48\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e17\u0e35\u0e48\u0e21\u0e35\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a \\(p,q\\) \u0e40\u0e1b\u0e47\u0e19\u0e25\u0e39\u0e01\u0e41\u0e23\u0e01\u0e01\u0e31\u0e1a\u0e25\u0e39\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07\u0e15\u0e32\u0e21\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e43\u0e19\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e31\u0e01\u0e23:\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e43\u0e2a\u0e48\u0e43\u0e19\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e31\u0e01\u0e23\u0e41\u0e25\u0e49\u0e27 \u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e31\u0e01\u0e23\u0e08\u0e30\u0e17\u0e33\u0e25\u0e32\u0e22\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e17\u0e31\u0e49\u0e07\u0e2a\u0e2d\u0e07\u0e25\u0e39\u0e01\u0e41\u0e25\u0e30\u0e43\u0e2b\u0e49\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e17\u0e35\u0e48\u0e21\u0e35\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01 \\(q-p\\) \u0e01\u0e31\u0e1a\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e17\u0e35\u0e48\u0e21\u0e35\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01 \\(\u230a\\frac{p+q}{2}\u230b\\) \u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e41\u0e17\u0e19</p> <p>\u0e2b\u0e21\u0e32\u0e22\u0e40\u0e2b\u0e15\u0e38: \\(\u230ax\u230b\\) \u0e2b\u0e21\u0e32\u0e22\u0e16\u0e36\u0e07 floor function \u0e02\u0e2d\u0e07 \\(x\\) \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e08\u0e33\u0e19\u0e27\u0e19\u0e40\u0e15\u0e47\u0e21\u0e17\u0e35\u0e48\u0e21\u0e35\u0e04\u0e48\u0e32\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e17\u0e35\u0e48\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32\u0e2b\u0e23\u0e37\u0e2d\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a \\(x\\)</p>"},{"location":"problems/toi20_orbs/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e43\u0e2b\u0e49 print \u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e17\u0e35\u0e48\u0e40\u0e23\u0e35\u0e22\u0e07\u0e08\u0e32\u0e01\u0e19\u0e49\u0e2d\u0e22\u0e44\u0e1b\u0e21\u0e32\u0e01</p> <p>Prerequisites</p> <ul> <li>Multiset</li> </ul> <p>Constraints</p> <ul> <li>\\(2 \\leq N \\leq 2\\cdot 10^6\\)</li> <li>\\(1 \\leq L \\leq 2\\cdot 10^6\\)</li> <li>\\(1\\leq a &lt; b \\leq N\\)</li> <li>\\(1 \\leq w_i \\leq 10^9\\)</li> </ul>"},{"location":"problems/toi20_orbs/#solution","title":"Solution","text":""},{"location":"problems/toi20_orbs/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32\u0e08\u0e30\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e17\u0e35\u0e48\u0e17\u0e35\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e40\u0e1b\u0e47\u0e19\u0e2d\u0e31\u0e19\u0e14\u0e31\u0e1a\u0e17\u0e35\u0e48 \\(a\\) \u0e01\u0e31\u0e1a \\(b\\) \u0e40\u0e2a\u0e21\u0e2d\u0e41\u0e1b\u0e25\u0e27\u0e48\u0e32\u0e40\u0e23\u0e32\u0e41\u0e04\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e0a\u0e49 Data Structure \u0e17\u0e35\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2b\u0e32\u0e04\u0e48\u0e32\u0e43\u0e19\u0e2d\u0e31\u0e19\u0e14\u0e31\u0e1a\u0e17\u0e35\u0e48 \\(a\\) \u0e41\u0e25\u0e30\u0e2d\u0e31\u0e19\u0e14\u0e31\u0e1a\u0e17\u0e35\u0e48 \\(b\\) \u0e44\u0e14\u0e49\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e23\u0e27\u0e14\u0e40\u0e23\u0e47\u0e27 \u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19\u0e40\u0e23\u0e32\u0e08\u0e36\u0e07\u0e04\u0e27\u0e23\u0e43\u0e0a\u0e49 multiset \u0e40\u0e1b\u0e47\u0e19 Data Structure \u0e19\u0e31\u0e49\u0e19\u0e41\u0e25\u0e30\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e21\u0e35\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e01\u0e31\u0e1a\u0e23\u0e39\u0e1b\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49 </p> <p>\u0e42\u0e14\u0e22 1.\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e43\u0e19 multiset1 \u0e17\u0e38\u0e01\u0e25\u0e39\u0e01\u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e43\u0e19 multiset2 \u0e17\u0e38\u0e01\u0e25\u0e39\u0e01 2.\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e43\u0e19 multiset2 \u0e17\u0e38\u0e01\u0e25\u0e39\u0e01\u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e43\u0e19 multiset3 \u0e17\u0e38\u0e01\u0e25\u0e39\u0e01</p> <p>\u0e16\u0e49\u0e32\u0e43\u0e2b\u0e49 \\(p\\) \u0e40\u0e1b\u0e47\u0e19\u0e04\u0e48\u0e32\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e43\u0e19\u0e2d\u0e31\u0e19\u0e14\u0e31\u0e1a\u0e17\u0e35\u0e48 \\(a\\) \u0e41\u0e25\u0e30 \\(q\\) \u0e40\u0e1b\u0e47\u0e19\u0e04\u0e48\u0e32\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e43\u0e19\u0e2d\u0e31\u0e19\u0e14\u0e31\u0e1a\u0e17\u0e35\u0e48 \\(b\\) \u0e08\u0e30\u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32 \\(q-p,\u230a\\frac{p+q}{2}\u230b \\leq q\\) \u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19\u0e40\u0e27\u0e25\u0e32\u0e43\u0e2a\u0e48\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e01\u0e25\u0e31\u0e1a\u0e40\u0e23\u0e32\u0e08\u0e33\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e2a\u0e48\u0e43\u0e19 multiset1 \u0e2b\u0e23\u0e37\u0e2d multiset2 \u0e40\u0e17\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19 \u0e42\u0e14\u0e22\u0e43\u0e2a\u0e48\u0e43\u0e19 multiset2 \u0e01\u0e48\u0e2d\u0e19\u0e41\u0e25\u0e49\u0e27\u0e04\u0e48\u0e2d\u0e22\u0e22\u0e49\u0e32\u0e22\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e21\u0e32\u0e43\u0e19 multiset1 \u0e42\u0e14\u0e22\u0e43\u0e2b\u0e49\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02 1 \u0e22\u0e31\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e08\u0e23\u0e34\u0e07</p>"},{"location":"problems/toi20_orbs/#code","title":"Code","text":"toi20_orbs.cpp<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint main(){\n    cin.tie(NULL)-&gt;sync_with_stdio(false);\n    int n, t, l, r;\n    cin &gt;&gt; n &gt;&gt; t &gt;&gt; l &gt;&gt; r;\n    vector &lt;int&gt; v(n);\n    for(int i = 0; i &lt; n; i++) cin &gt;&gt; v[i];\n    sort(v.begin(), v.end());\n    multiset&lt;int&gt; a, b, o;\n    for(int i = 0; i &lt; l; i++){\n        a.insert(v[i]);\n    }\n    for(int i = l; i &lt; r; i++){\n        b.insert(v[i]);\n    }\n    for(int i = r; i &lt; n; i++){\n        o.insert(v[i]);\n    }\n\n    while(t--){\n        int x = *--a.end();\n        int y = *--b.end();\n        a.erase(--a.end());\n        b.erase(--b.end());\n        int new1 = y - x, new2 = (x + y) / 2;\n        b.insert(new1);\n        b.insert(new2);\n        int firstB = *b.begin();\n        b.erase(b.begin());\n        a.insert(firstB);\n        if (*--a.end() &gt; *b.begin()) {\n            int temp1 = *--a.end(), temp2 = *b.begin();\n            a.erase(--a.end());\n            b.erase(b.begin());\n            a.insert(temp2);\n            b.insert(temp1);\n        }\n    }\n\n    for(int i : a) cout &lt;&lt; i &lt;&lt; ' ';\n    for(int i : b) cout &lt;&lt; i &lt;&lt; ' ';\n    for(int i : o) cout &lt;&lt; i &lt;&lt; ' ';\n}\n</code></pre> <p>Total Time Complexity</p> <p>\\(O(N\\log N)\\)</p> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f  </p>"},{"location":"problems/toi20_tour/","title":"\u0e04\u0e33\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33\u0e1e\u0e23\u0e49\u0e2d\u0e21 code \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e02\u0e49\u0e2d toi21_duty_free","text":""},{"location":"problems/toi20_tour/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e40\u0e23\u0e32\u0e21\u0e35\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e08\u0e30\u0e0b\u0e37\u0e49\u0e2d\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32 <code>N</code> \u0e04\u0e19 \u0e44\u0e25\u0e48\u0e04\u0e34\u0e27\u0e08\u0e32\u0e01\u0e04\u0e19\u0e17\u0e35\u0e48 <code>1</code> \u0e16\u0e36\u0e07\u0e04\u0e19\u0e17\u0e35\u0e48 <code>N</code> \u0e42\u0e14\u0e22\u0e04\u0e19\u0e17\u0e35\u0e48 <code>i</code> \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e14\u0e34\u0e19\u0e44\u0e14\u0e49\u0e44\u0e01\u0e25\u0e2a\u0e38\u0e14 <code>max_allowed_positions[i - 1]</code> \u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07 \u0e42\u0e14\u0e22:</p> <ul> <li>\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e41\u0e15\u0e48\u0e25\u0e30\u0e04\u0e19\u0e08\u0e30\u0e40\u0e14\u0e34\u0e19\u0e15\u0e23\u0e07\u0e44\u0e1b\u0e2b\u0e22\u0e34\u0e1a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e15\u0e19 \u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e2b\u0e22\u0e34\u0e1a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e04\u0e19\u0e2d\u0e37\u0e48\u0e19</li> <li>\u0e1e\u0e19\u0e31\u0e01\u0e07\u0e32\u0e19\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e19\u0e33\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e17\u0e35\u0e48\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e21\u0e32\u0e08\u0e31\u0e14\u0e27\u0e32\u0e07\u0e43\u0e2b\u0e21\u0e48\u0e1a\u0e19\u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30\u0e2b\u0e21\u0e32\u0e22\u0e40\u0e25\u0e02\u0e44\u0e14\u0e49\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e2d\u0e34\u0e2a\u0e23\u0e30 (\u0e20\u0e32\u0e22\u0e43\u0e15\u0e49\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02 1 \u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32 \u0e15\u0e48\u0e2d 1 \u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07)</li> </ul>"},{"location":"problems/toi20_tour/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e17\u0e35\u0e48\u0e08\u0e30\u0e04\u0e33\u0e19\u0e27\u0e13\u0e08\u0e33\u0e19\u0e27\u0e19\u0e04\u0e23\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48\u0e1e\u0e19\u0e31\u0e01\u0e07\u0e32\u0e19\u0e15\u0e49\u0e2d\u0e07\u0e08\u0e31\u0e14\u0e27\u0e32\u0e07\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e43\u0e2b\u0e21\u0e48\u0e43\u0e2b\u0e49\u0e19\u0e49\u0e2d\u0e22\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14</p>"},{"location":"problems/toi20_tour/#_3","title":"\u0e02\u0e2d\u0e1a\u0e40\u0e02\u0e15\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25","text":""},{"location":"problems/toi21_duty_free/","title":"toi21_duty_free","text":"","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#problem","title":"Problem","text":"","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e40\u0e23\u0e32\u0e21\u0e35\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e08\u0e30\u0e0b\u0e37\u0e49\u0e2d\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32 <code>N</code> \u0e04\u0e19 \u0e44\u0e25\u0e48\u0e04\u0e34\u0e27\u0e08\u0e32\u0e01\u0e04\u0e19\u0e17\u0e35\u0e48 <code>1</code> \u0e16\u0e36\u0e07\u0e04\u0e19\u0e17\u0e35\u0e48 <code>N</code> \u0e42\u0e14\u0e22\u0e04\u0e19\u0e17\u0e35\u0e48 <code>i</code> \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e14\u0e34\u0e19\u0e44\u0e14\u0e49\u0e44\u0e01\u0e25\u0e2a\u0e38\u0e14 <code>max_allowed_positions[i - 1]</code> \u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07 \u0e42\u0e14\u0e22:</p> <ul> <li>\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e41\u0e15\u0e48\u0e25\u0e30\u0e04\u0e19\u0e08\u0e30\u0e40\u0e14\u0e34\u0e19\u0e15\u0e23\u0e07\u0e44\u0e1b\u0e2b\u0e22\u0e34\u0e1a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e15\u0e19 \u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e2b\u0e22\u0e34\u0e1a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e04\u0e19\u0e2d\u0e37\u0e48\u0e19</li> <li>\u0e1e\u0e19\u0e31\u0e01\u0e07\u0e32\u0e19\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e19\u0e33\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e17\u0e35\u0e48\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e21\u0e32\u0e08\u0e31\u0e14\u0e27\u0e32\u0e07\u0e43\u0e2b\u0e21\u0e48\u0e1a\u0e19\u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30\u0e2b\u0e21\u0e32\u0e22\u0e40\u0e25\u0e02\u0e44\u0e14\u0e49\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e2d\u0e34\u0e2a\u0e23\u0e30 (\u0e20\u0e32\u0e22\u0e43\u0e15\u0e49\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02 1 \u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32 \u0e15\u0e48\u0e2d 1 \u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07)</li> </ul>","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e17\u0e35\u0e48\u0e08\u0e30\u0e04\u0e33\u0e19\u0e27\u0e13\u0e08\u0e33\u0e19\u0e27\u0e19\u0e04\u0e23\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48\u0e1e\u0e19\u0e31\u0e01\u0e07\u0e32\u0e19\u0e15\u0e49\u0e2d\u0e07\u0e08\u0e31\u0e14\u0e27\u0e32\u0e07\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e43\u0e2b\u0e21\u0e48\u0e43\u0e2b\u0e49\u0e19\u0e49\u0e2d\u0e22\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14</p> <p>Constraints</p> <p>\\(1 \\leq N \\leq 2,000,000\\) \\(1 \\leq max\\_allowed\\_positions[i-1] \\leq N\\)</p> <p>Prerequisites</p> <ul> <li>DSU (Disjoint Set Union)</li> </ul>","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#solution","title":"Solution","text":"","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#_3","title":"\u0e44\u0e2d\u0e40\u0e14\u0e35\u0e22\u0e2b\u0e25\u0e31\u0e01","text":"<p>\u0e40\u0e23\u0e32\u0e08\u0e30\u0e1e\u0e22\u0e32\u0e22\u0e32\u0e21\u0e27\u0e32\u0e07\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e17\u0e35\u0e48 <code>i</code> \u0e43\u0e2b\u0e49\u0e2d\u0e22\u0e39\u0e48\u0e44\u0e01\u0e25\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e44\u0e1b\u0e44\u0e14\u0e49 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e08\u0e30\u0e44\u0e14\u0e49\u0e21\u0e35\u0e1e\u0e37\u0e49\u0e19\u0e17\u0e35\u0e48\u0e14\u0e49\u0e32\u0e19\u0e2b\u0e19\u0e49\u0e32\u0e43\u0e2b\u0e49\u0e01\u0e31\u0e1a\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e2d\u0e37\u0e48\u0e19\u0e17\u0e35\u0e48 <code>max_allowed_positions[i - 1]</code> \u0e21\u0e35\u0e04\u0e48\u0e32\u0e19\u0e49\u0e2d\u0e22 \u0e46</p>","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#_4","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e27\u0e34\u0e18\u0e35\u0e01\u0e32\u0e23\u0e40\u0e02\u0e35\u0e22\u0e19\u0e41\u0e1a\u0e1a Brute Force \u0e04\u0e37\u0e2d \u0e40\u0e23\u0e32\u0e08\u0e30\u0e21\u0e35 array \u0e17\u0e35\u0e48\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e27\u0e48\u0e32 \\(arr[i] =\\) \u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07\u0e17\u0e35\u0e48 \\(i\\) \u0e44\u0e14\u0e49\u0e27\u0e32\u0e07\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e44\u0e27\u0e49\u0e2b\u0e23\u0e37\u0e2d\u0e22\u0e31\u0e07 (\u0e15\u0e2d\u0e19\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19 <code>arr[i] = false</code> \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e17\u0e38\u0e01\u0e46 \\(i\\)) \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e23\u0e34\u0e48\u0e21 loop \u0e08\u0e32\u0e01 slot \u0e17\u0e35\u0e48 \\(max\\_allowed\\_positions[i - 1]\\) \u0e44\u0e1b\u0e08\u0e19\u0e16\u0e36\u0e07 \\(1\\) \u0e41\u0e25\u0e49\u0e27\u0e16\u0e49\u0e32\u0e2b\u0e32\u0e01\u0e27\u0e48\u0e32\u0e0a\u0e48\u0e2d\u0e07\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e01\u0e33\u0e25\u0e31\u0e07\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e2d\u0e22\u0e39\u0e48\u0e22\u0e31\u0e07\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e27\u0e32\u0e07\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e44\u0e27\u0e49 (<code>arr[i] == false</code>) \u0e40\u0e23\u0e32\u0e08\u0e30 mark \u0e0a\u0e48\u0e2d\u0e07\u0e19\u0e31\u0e49\u0e19\u0e27\u0e48\u0e32\u0e16\u0e39\u0e01\u0e43\u0e0a\u0e49\u0e41\u0e25\u0e49\u0e27 (<code>arr[i] = true</code>)  </p> <p>\u0e41\u0e25\u0e30\u0e16\u0e49\u0e32\u0e2b\u0e32\u0e01\u0e27\u0e48\u0e32\u0e40\u0e23\u0e32 loop \u0e08\u0e32\u0e01 \\(max\\_allowed\\_positions[i - 1]\\) \u0e16\u0e36\u0e07 \\(1\\) \u0e41\u0e25\u0e49\u0e27\u0e44\u0e21\u0e48\u0e21\u0e35\u0e0a\u0e48\u0e2d\u0e07\u0e43\u0e14\u0e17\u0e35\u0e48\u0e27\u0e48\u0e32\u0e07\u0e40\u0e25\u0e22 \u0e41\u0e2a\u0e14\u0e07\u0e27\u0e48\u0e32 \u0e17\u0e38\u0e01\u0e46\u0e0a\u0e48\u0e2d\u0e07\u0e17\u0e35\u0e48\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e19\u0e35\u0e49\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e14\u0e34\u0e19\u0e44\u0e1b\u0e44\u0e14\u0e49 \u0e44\u0e21\u0e48\u0e21\u0e35\u0e0a\u0e48\u0e2d\u0e07\u0e44\u0e2b\u0e19\u0e27\u0e48\u0e32\u0e07\u0e40\u0e25\u0e22 \u0e40\u0e23\u0e32\u0e08\u0e30 reset array \u0e42\u0e14\u0e22\u0e15\u0e31\u0e49\u0e07\u0e43\u0e2b\u0e49\u0e17\u0e38\u0e01\u0e0a\u0e48\u0e2d\u0e07\u0e40\u0e1b\u0e47\u0e19 \\(false\\) \u0e41\u0e25\u0e30\u0e01\u0e47\u0e04\u0e33\u0e19\u0e27\u0e13\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e40\u0e14\u0e34\u0e21\u0e08\u0e19\u0e04\u0e23\u0e1a \\(N\\) \u0e04\u0e19</p> <p>\u0e1b\u0e31\u0e0d\u0e2b\u0e32\u0e02\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e40\u0e02\u0e35\u0e22\u0e19\u0e27\u0e34\u0e18\u0e35\u0e19\u0e35\u0e49\u0e04\u0e37\u0e2d time complexity \u0e43\u0e19\u0e01\u0e23\u0e13\u0e35\u0e17\u0e35\u0e48\u0e41\u0e22\u0e48\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19 \\(O(n^2)\\) \u0e0b\u0e36\u0e48\u0e07\u0e22\u0e31\u0e07\u0e44\u0e07\u0e01\u0e47\u0e08\u0e30\u0e42\u0e14\u0e19 TLE \u0e41\u0e19\u0e48\u0e46</p> <p>\u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19 \u0e04\u0e27\u0e32\u0e21\u0e22\u0e32\u0e01\u0e02\u0e2d\u0e07\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e02\u0e49\u0e2d\u0e19\u0e35\u0e49\u0e04\u0e37\u0e2d \u0e27\u0e34\u0e18\u0e35\u0e01\u0e32\u0e23\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e08\u0e30 optimize \u0e42\u0e04\u0e49\u0e14\u0e43\u0e2b\u0e49\u0e40\u0e2b\u0e25\u0e37\u0e2d \\(O(n)\\) \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e08\u0e30\u0e43\u0e0a\u0e49 DSU (Disjoint Set Union) \u0e43\u0e19\u0e01\u0e32\u0e23 optimize \u0e42\u0e04\u0e49\u0e14\u0e02\u0e49\u0e2d\u0e19\u0e35\u0e49</p>","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#optimize","title":"\u0e27\u0e34\u0e18\u0e35\u0e01\u0e32\u0e23 optimize","text":"<p>\u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a auxiliary array \u0e0b\u0e36\u0e48\u0e07\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e27\u0e48\u0e32 \u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07\u0e17\u0e35\u0e48 \\(i\\) \u0e40\u0e23\u0e32\u0e08\u0e30\u0e27\u0e32\u0e07\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e17\u0e35\u0e48\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48 \u0e41\u0e25\u0e30\u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e40\u0e1e\u0e34\u0e48\u0e21 1 \u0e15\u0e31\u0e27\u0e40\u0e1b\u0e47\u0e19 integer \u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 \\(f\\) (\u0e22\u0e48\u0e2d\u0e08\u0e32\u0e01 first) \u0e42\u0e14\u0e22 \\(f\\) \u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e27\u0e48\u0e32 \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e08\u0e31\u0e14\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e23\u0e2d\u0e1a\u0e19\u0e35\u0e49 \u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e41\u0e23\u0e01\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e08\u0e31\u0e14\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e43\u0e2b\u0e49\u0e04\u0e37\u0e2d\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e17\u0e35\u0e48\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48  </p> <p>\u0e42\u0e14\u0e22\u0e15\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e2b\u0e32 root \u0e02\u0e2d\u0e07 \\(X\\) \u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e0a\u0e47\u0e01\u0e43\u0e19 auxiliary array \u0e19\u0e31\u0e49\u0e19\u0e01\u0e48\u0e2d\u0e19\u0e27\u0e48\u0e32 \u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e08\u0e30\u0e27\u0e32\u0e07\u0e43\u0e19\u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07\u0e17\u0e35\u0e48 \\(X\\) \u0e19\u0e31\u0e49\u0e19 \u0e40\u0e1b\u0e47\u0e19\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e43\u0e04\u0e23 \u0e16\u0e49\u0e32\u0e2b\u0e32\u0e01\u0e27\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e17\u0e35\u0e48\u0e2b\u0e21\u0e32\u0e22\u0e40\u0e25\u0e02\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32 \\(f\\) (<code>aux[X] &lt; f</code>) \u0e01\u0e47\u0e41\u0e2a\u0e14\u0e07\u0e27\u0e48\u0e32\u0e40\u0e23\u0e32\u0e44\u0e21\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e2a\u0e19\u0e43\u0e08\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e19\u0e31\u0e49\u0e19\u0e41\u0e25\u0e49\u0e27 \u0e40\u0e1e\u0e23\u0e32\u0e30\u0e27\u0e48\u0e32\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e19\u0e31\u0e49\u0e19\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e44\u0e1b\u0e41\u0e25\u0e49\u0e27 \u0e41\u0e25\u0e30\u0e40\u0e23\u0e32\u0e01\u0e33\u0e25\u0e31\u0e07\u0e08\u0e30\u0e08\u0e31\u0e14\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e1a\u0e19\u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07\u0e43\u0e2b\u0e21\u0e48\u0e2d\u0e35\u0e01\u0e23\u0e2d\u0e1a  </p> <p>\u0e0b\u0e36\u0e48\u0e07\u0e08\u0e30\u0e17\u0e33\u0e43\u0e2b\u0e49 time complexity \u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e25\u0e14\u0e40\u0e2b\u0e25\u0e37\u0e2d \\(O(n)\\) \u0e19\u0e31\u0e48\u0e19\u0e40\u0e2d\u0e07  </p>","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#summary","title":"Summary","text":"<ul> <li>\u0e43\u0e0a\u0e49 Greedy Algorithm \u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e0a\u0e48\u0e2d\u0e07\u0e17\u0e35\u0e48\u0e08\u0e30\u0e27\u0e32\u0e07\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32  </li> <li>\u0e43\u0e0a\u0e49 Disjoint Set Union \u0e43\u0e19\u0e01\u0e32\u0e23 optimize \u0e42\u0e04\u0e49\u0e14  </li> </ul>","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#code","title":"Code","text":"toi21_duty_free.cpp<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 2e6 + 5;\n\nint i, f, aux[N], par[N];\n\nint dsu(int x){\n if (aux[x] &lt; f) {\n  aux[x] = i;\n  par[x] = x;\n }\n return par[x] = (par[x] == x ? x : dsu(par[x]));\n}\n\nint minimum_bag_rearrangement_time(vector&lt;int&gt; max_allowed_positions){\n int n  = max_allowed_positions.size(); \n f = 1;\n iota(par, par + N, 0);\n memset(aux, -1, sizeof aux);\n int ans = 0;\n for (i = 1; i &lt;= n; i++) {\n  int x = dsu(max_allowed_positions[i - 1]);\n  if (x &lt;= 0) {\n   ans++, f = i;\n   x = dsu(max_allowed_positions[i - 1]);\n  }\n  par[x] = dsu(x - 1);\n }\n return ans;\n}\n</code></pre> <p>Total Time Complexity</p> <p>\\(O(N)\\)</p> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f</p>","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_quartet/","title":"toi21_quartet","text":"","tags":["TOI","Bruteforce","DFS","DP","Hard"]},{"location":"problems/toi21_quartet/#problem","title":"Problem","text":"","tags":["TOI","Bruteforce","DFS","DP","Hard"]},{"location":"problems/toi21_quartet/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e43\u0e19\u0e40\u0e21\u0e37\u0e2d\u0e07\u0e19\u0e04\u0e23\u0e41\u0e2b\u0e48\u0e07\u0e2b\u0e19\u0e36\u0e48\u0e07 \u0e21\u0e35\u0e2a\u0e16\u0e32\u0e19\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48 \\(3\\) \u0e17\u0e35\u0e48 \u0e44\u0e14\u0e49\u0e41\u0e01\u0e48</p> <ul> <li>\u0e2b\u0e21\u0e39\u0e48\u0e1a\u0e49\u0e32\u0e19 \\(N\\) \u0e41\u0e2b\u0e48\u0e07 \u0e41\u0e15\u0e48\u0e25\u0e30\u0e41\u0e2b\u0e48\u0e07\u0e16\u0e39\u0e01\u0e01\u0e33\u0e01\u0e31\u0e1a\u0e14\u0e49\u0e27\u0e22\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48 \\(1\\) \u0e16\u0e36\u0e07 \\(N\\)</li> <li>\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e15\u0e33\u0e1a\u0e25 \\(M\\) \u0e41\u0e2b\u0e48\u0e07 \u0e41\u0e15\u0e48\u0e25\u0e30\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e16\u0e39\u0e01\u0e01\u0e33\u0e01\u0e31\u0e1a\u0e14\u0e49\u0e27\u0e22\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48 \\(N+1\\) \u0e16\u0e36\u0e07 \\(N+M\\)</li> <li>\u0e16\u0e19\u0e19 \\(N+M\u22121\\) \u0e2a\u0e32\u0e22 \u0e42\u0e14\u0e22\u0e16\u0e19\u0e19\u0e08\u0e30\u0e44\u0e21\u0e48\u0e21\u0e35 cycle \u0e41\u0e25\u0e30 \u0e16\u0e19\u0e19\u0e17\u0e38\u0e01\u0e2a\u0e32\u0e22\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2a\u0e31\u0e0d\u0e08\u0e23\u0e2a\u0e27\u0e19\u0e17\u0e32\u0e07\u0e01\u0e31\u0e19\u0e44\u0e14\u0e49   \u0e42\u0e14\u0e22\u0e43\u0e19\u0e40\u0e21\u0e37\u0e2d\u0e07\u0e41\u0e2b\u0e48\u0e07\u0e19\u0e35\u0e49 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e23\u0e35\u0e22\u0e01 \u201c\u0e01\u0e25\u0e38\u0e48\u0e21\u0e2d\u0e1e\u0e22\u0e1e\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22\u201d \u0e40\u0e1b\u0e47\u0e19\u0e01\u0e25\u0e38\u0e48\u0e21\u0e02\u0e2d\u0e07\u0e2b\u0e21\u0e39\u0e48\u0e1a\u0e49\u0e32\u0e19 \\(4\\) \u0e41\u0e2b\u0e48\u0e07 \u0e17\u0e35\u0e48\u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e21\u0e35\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e15\u0e33\u0e1a\u0e25\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e19\u0e49\u0e2d\u0e22 \\(1\\) \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e17\u0e35\u0e48\u0e0a\u0e32\u0e27\u0e1a\u0e49\u0e32\u0e19\u0e08\u0e32\u0e01\u0e17\u0e31\u0e49\u0e07 \\(4\\) \u0e2b\u0e21\u0e39\u0e48\u0e1a\u0e49\u0e32\u0e19\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e14\u0e34\u0e19\u0e17\u0e32\u0e07\u0e21\u0e32\u0e22\u0e31\u0e07\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e15\u0e33\u0e1a\u0e25\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e19\u0e31\u0e49\u0e19\u0e44\u0e14\u0e49\u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e0a\u0e49\u0e16\u0e19\u0e19\u0e2a\u0e32\u0e22\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19\u0e40\u0e25\u0e22</li> </ul>","tags":["TOI","Bruteforce","DFS","DP","Hard"]},{"location":"problems/toi21_quartet/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e19\u0e31\u0e1a\u0e08\u0e33\u0e19\u0e27\u0e19 \u201c\u0e01\u0e25\u0e38\u0e48\u0e21\u0e2d\u0e1e\u0e22\u0e1e\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22\u201d \u0e42\u0e14\u0e22\u0e43\u0e2b\u0e49\u0e23\u0e30\u0e1a\u0e38\u0e04\u0e33\u0e15\u0e2d\u0e1a\u0e43\u0e19\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e02\u0e2d\u0e07\u0e40\u0e28\u0e29\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e23\u0e08\u0e33\u0e19\u0e27\u0e19\u0e02\u0e2d\u0e07 \u201c\u0e01\u0e25\u0e38\u0e48\u0e21\u0e2d\u0e1e\u0e22\u0e1e\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22\u201d \u0e14\u0e49\u0e27\u0e22 \\(10^9+7\\)</p> <p>Constraints</p> <p>\\(4 \\leq N \\leq 10^5\\) \\(1 \\leq M \\leq N-2\\) </p> <p>Prerequisites</p> <ul> <li>DFS (Depth First Search)</li> <li>Dynamic Programming</li> <li>Knapsack DP</li> <li>DP on Tree</li> </ul>","tags":["TOI","Bruteforce","DFS","DP","Hard"]},{"location":"problems/toi21_quartet/#solution","title":"Solution","text":"","tags":["TOI","Bruteforce","DFS","DP","Hard"]},{"location":"problems/toi21_quartet/#_3","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15","text":"<p>\u0e08\u0e33\u0e19\u0e27\u0e19\u0e16\u0e19\u0e19 \u0e08\u0e30\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a \\(N+M\u22121\\) \u0e0b\u0e36\u0e48\u0e07\u0e2b\u0e21\u0e32\u0e22\u0e04\u0e27\u0e32\u0e21\u0e27\u0e48\u0e32 Graph \u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e21\u0e32\u0e08\u0e30\u0e21\u0e35\u0e25\u0e31\u0e01\u0e29\u0e13\u0e30\u0e40\u0e1b\u0e47\u0e19 Tree</p>","tags":["TOI","Bruteforce","DFS","DP","Hard"]},{"location":"problems/toi21_quartet/#_4","title":"\u0e44\u0e2d\u0e40\u0e14\u0e35\u0e22\u0e2b\u0e25\u0e31\u0e01","text":"<p>\u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e27\u0e48\u0e32 \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e41\u0e15\u0e48\u0e25\u0e30\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e15\u0e33\u0e1a\u0e25 \\(u\\) \u0e16\u0e49\u0e32\u0e40\u0e23\u0e32\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e43\u0e2b\u0e49\u0e2b\u0e21\u0e39\u0e48\u0e1a\u0e49\u0e32\u0e19 \\(4\\) \u0e41\u0e2b\u0e48\u0e07\u0e40\u0e14\u0e34\u0e19\u0e17\u0e32\u0e07\u0e21\u0e32\u0e22\u0e31\u0e07\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e15\u0e33\u0e1a\u0e25 \\(u\\) \u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e43\u0e0a\u0e49\u0e16\u0e19\u0e19\u0e2a\u0e32\u0e22\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19\u0e40\u0e25\u0e22 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e19\u0e31\u0e1a\u0e44\u0e14\u0e49\u0e01\u0e35\u0e48\u0e01\u0e25\u0e38\u0e48\u0e21 (\u0e19\u0e31\u0e1a\u0e08\u0e33\u0e19\u0e27\u0e19\u0e01\u0e25\u0e38\u0e48\u0e21\u0e2d\u0e1e\u0e22\u0e1e\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22\u0e17\u0e35\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e14\u0e34\u0e19\u0e17\u0e32\u0e07\u0e21\u0e32 \\(u\\) \u0e44\u0e14\u0e49)</p>","tags":["TOI","Bruteforce","DFS","DP","Hard"]},{"location":"problems/toi21_quartet/#_5","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e40\u0e23\u0e32\u0e08\u0e30\u0e17\u0e33 Dynamic Programming on Tree \u0e1a\u0e19 Tree \u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e21\u0e32 \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e43\u0e19 array of vector (\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 \\(cnt\\)) \u0e27\u0e48\u0e32 \u0e16\u0e49\u0e32\u0e40\u0e23\u0e32\u0e2d\u0e22\u0e39\u0e48\u0e17\u0e35\u0e48\u0e42\u0e2b\u0e19\u0e14 \\(u\\) \u0e41\u0e25\u0e49\u0e27 \u0e2b\u0e32\u0e01\u0e40\u0e23\u0e32\u0e40\u0e14\u0e34\u0e19\u0e15\u0e32\u0e21\u0e16\u0e19\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30\u0e2a\u0e32\u0e22\u0e17\u0e35\u0e48\u0e15\u0e34\u0e14\u0e01\u0e31\u0e1a\u0e42\u0e2b\u0e19\u0e14 \\(u\\) (\u0e40\u0e14\u0e34\u0e19\u0e15\u0e32\u0e21 adjacency list) \u0e41\u0e25\u0e49\u0e27 \u0e08\u0e30\u0e21\u0e35\u0e2b\u0e21\u0e39\u0e48\u0e1a\u0e49\u0e32\u0e19\u0e08\u0e33\u0e19\u0e27\u0e19\u0e01\u0e35\u0e48\u0e2b\u0e21\u0e39\u0e48\u0e1a\u0e49\u0e32\u0e19\u0e43\u0e19\u0e40\u0e2a\u0e49\u0e19\u0e17\u0e32\u0e07\u0e19\u0e31\u0e49\u0e19 (\u0e19\u0e31\u0e1a\u0e08\u0e33\u0e19\u0e27\u0e19\u0e2b\u0e21\u0e39\u0e48\u0e1a\u0e49\u0e32\u0e19\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19 subtree \u0e02\u0e2d\u0e07 \\(adj[u][i]\\) \u0e41\u0e25\u0e49\u0e27\u0e40\u0e01\u0e47\u0e1a\u0e44\u0e27\u0e49\u0e43\u0e19 \\(cnt[u][i]\\)) \u0e19\u0e31\u0e48\u0e19\u0e04\u0e37\u0e2d \u0e02\u0e19\u0e32\u0e14\u0e02\u0e2d\u0e07 \\(cnt[u]\\) \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e41\u0e15\u0e48\u0e25\u0e30 \\(u\\) \u0e2d\u0e32\u0e08\u0e08\u0e30\u0e21\u0e35\u0e02\u0e19\u0e32\u0e14\u0e44\u0e21\u0e48\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e19\u0e19\u0e31\u0e48\u0e19\u0e40\u0e2d\u0e07\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e32\u0e44\u0e14\u0e49 \\(cnt\\) \u0e21\u0e32\u0e41\u0e25\u0e49\u0e27 \u0e17\u0e35\u0e19\u0e35\u0e49 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23 loop \u0e08\u0e32\u0e01 \\(N+1\\) \u0e16\u0e36\u0e07 \\(N+M\\) (loop \u0e41\u0e04\u0e48\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e15\u0e33\u0e1a\u0e25) \u0e41\u0e25\u0e49\u0e27\u0e08\u0e30\u0e04\u0e33\u0e19\u0e27\u0e13\u0e27\u0e48\u0e32 \u0e16\u0e49\u0e32\u0e2b\u0e32\u0e01\u0e27\u0e48\u0e32\u0e40\u0e23\u0e32\u0e08\u0e30\u0e19\u0e31\u0e1a\u0e08\u0e32\u0e01\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e15\u0e33\u0e1a\u0e25\u0e17\u0e35\u0e48 \\(u\\) \u0e41\u0e25\u0e49\u0e27 \u0e08\u0e30\u0e21\u0e35 \u201c\u0e01\u0e25\u0e38\u0e48\u0e21\u0e2d\u0e1e\u0e22\u0e1e\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22\u201d \u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e01\u0e35\u0e48\u0e01\u0e25\u0e38\u0e48\u0e21 \u0e41\u0e25\u0e30\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e32\u0e04\u0e33\u0e19\u0e27\u0e13\u0e04\u0e23\u0e1a\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e15\u0e33\u0e1a\u0e25\u0e17\u0e31\u0e49\u0e07 \\(M\\) \u0e28\u0e39\u0e19\u0e22\u0e4c\u0e41\u0e25\u0e49\u0e27 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e44\u0e14\u0e49\u0e04\u0e33\u0e15\u0e2d\u0e1a\u0e2d\u0e2d\u0e01\u0e21\u0e32</p> <p>\u0e27\u0e34\u0e18\u0e35\u0e01\u0e32\u0e23\u0e04\u0e33\u0e19\u0e27\u0e13: - \u0e01\u0e32\u0e23\u0e04\u0e33\u0e19\u0e27\u0e13\u0e41\u0e1a\u0e1a Brute Force: \u0e40\u0e23\u0e32\u0e08\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23 loop 4 \u0e0a\u0e31\u0e49\u0e19 \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e17\u0e38\u0e01\u0e46 \\(u\\) \u0e42\u0e14\u0e22\u0e08\u0e30 loop \\(i,j,k,l\\) \u0e41\u0e25\u0e30\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e17\u0e38\u0e01\u0e46\u0e04\u0e23\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48 loop \u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e04\u0e48\u0e32 \\(ans\\) \u0e44\u0e1b\u0e40\u0e1b\u0e47\u0e19 \\(cnt[u][i]\u2217cnt[u][j]\u2217cnt[u][k]\u2217cnt[u][l]\\) \u0e41\u0e15\u0e48\u0e27\u0e34\u0e18\u0e35\u0e19\u0e35\u0e49\u0e08\u0e30\u0e0a\u0e49\u0e32\u0e40\u0e01\u0e34\u0e19\u0e44\u0e1b\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e43\u0e19\u0e40\u0e27\u0e25\u0e32\u0e17\u0e35\u0e48\u0e41\u0e22\u0e48\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e0a\u0e49 time complexity \u0e43\u0e19\u0e01\u0e32\u0e23\u0e04\u0e33\u0e19\u0e27\u0e13 \\(O(n^4)\\)</p> <ul> <li>\u0e01\u0e32\u0e23\u0e04\u0e33\u0e19\u0e27\u0e13\u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 Dynamic Programming: \u0e40\u0e23\u0e32\u0e08\u0e30\u0e21\u0e35 2d array \u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 \\(dp\\) \u0e42\u0e14\u0e22\u0e01\u0e32\u0e23\u0e04\u0e33\u0e19\u0e27\u0e13\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49:   State \u0e02\u0e2d\u0e07 Dynamic Programming \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19 \\(dp[i][j]=\\) \u0e08\u0e33\u0e19\u0e27\u0e19\u0e27\u0e34\u0e18\u0e35\u0e17\u0e35\u0e48\u0e08\u0e30\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e2b\u0e21\u0e39\u0e48\u0e1a\u0e49\u0e32\u0e19\u0e21\u0e32 \\(j\\) \u0e2b\u0e21\u0e39\u0e48\u0e1a\u0e49\u0e32\u0e19 \u0e16\u0e49\u0e32\u0e2b\u0e32\u0e01\u0e27\u0e48\u0e32\u0e40\u0e23\u0e32\u0e04\u0e34\u0e14\u0e41\u0e04\u0e48 \\(i\\) \u0e40\u0e21\u0e37\u0e2d\u0e07\u0e41\u0e23\u0e01\u0e17\u0e35\u0e48\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e15\u0e34\u0e14\u0e01\u0e31\u0e1a\u0e42\u0e2b\u0e19\u0e14 \\(u\\)   Recurrence Relation \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19:</li> <li>\\(dp[i][0]=1\\) (\u0e21\u0e35\u0e27\u0e34\u0e18\u0e35\u0e40\u0e25\u0e37\u0e2d\u0e01 \\(0\\) \u0e40\u0e21\u0e37\u0e2d\u0e07\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14 \\(1\\) \u0e27\u0e34\u0e18\u0e35 \u0e01\u0e47\u0e04\u0e37\u0e2d \u0e44\u0e21\u0e48\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e2d\u0e30\u0e44\u0e23\u0e40\u0e25\u0e22)</li> <li>\\(dp[i][j]=dp[i\u22121][j]+(dp[i\u22121][j\u22121]\u2217cnt[u][i])\\) (\u0e08\u0e30\u0e21\u0e35 2 \u0e01\u0e23\u0e13\u0e35\u0e44\u0e14\u0e49\u0e41\u0e01\u0e48: 1. \u0e44\u0e21\u0e48\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e08\u0e32\u0e01 \\(adj[u][i]\\) \u0e41\u0e25\u0e30 2. \u0e40\u0e25\u0e37\u0e2d\u0e01\u0e08\u0e32\u0e01 \\(adj[u][i]\\))</li> </ul> <p>\u0e41\u0e25\u0e49\u0e27\u0e15\u0e2d\u0e19\u0e08\u0e1a \u0e40\u0e23\u0e32\u0e01\u0e47\u0e41\u0e04\u0e48\u0e40\u0e1e\u0e34\u0e48\u0e21 \\(ans\\) \u0e44\u0e1b\u0e01\u0e31\u0e1a\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07 \\(dp[adj[u].size()][4]\\)</p>","tags":["TOI","Bruteforce","DFS","DP","Hard"]},{"location":"problems/toi21_quartet/#summary","title":"Summary","text":"<p>\u0e43\u0e0a\u0e49 DP on Tree \u0e43\u0e19\u0e01\u0e32\u0e23\u0e04\u0e33\u0e19\u0e27\u0e13\u0e2b\u0e32\u0e02\u0e19\u0e32\u0e14\u0e02\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30 subtree \u0e02\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30 node \u0e43\u0e0a\u0e49 DP \u0e43\u0e19\u0e01\u0e32\u0e23\u0e04\u0e33\u0e19\u0e27\u0e13\u0e27\u0e34\u0e18\u0e35\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e2b\u0e21\u0e39\u0e48\u0e1a\u0e49\u0e32\u0e19 \\(4\\) \u0e41\u0e2b\u0e48\u0e07\u0e08\u0e32\u0e01\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e15\u0e33\u0e1a\u0e25\u0e41\u0e15\u0e48\u0e25\u0e30\u0e28\u0e39\u0e19\u0e22\u0e4c</p>","tags":["TOI","Bruteforce","DFS","DP","Hard"]},{"location":"problems/toi21_quartet/#code","title":"Code:","text":"<pre><code>#include &lt;bits/stdc++.h&gt; \n\nusing namespace std; \n\n#define int long long \n\nconst int mod = 1e9 + 7; \nconst int N = 1e5 + 5; \nconst int M = 1e5 + 5; \n\nint n, m, ans, sz[N + M]; \nvector &lt;int&gt; adj[N + M], cnt[N + M]; \n\nvoid dfs(int u, int p){ \n    sz[u] = (u &lt;= n); \n    for (auto v : adj[u]) { \n        if (v == p) continue; \n        dfs(v, u); \n        if (sz[v] &gt; 0) cnt[u].emplace_back(sz[v]), sz[u] += sz[v]; \n    } \n    cnt[u].emplace_back(n - sz[u]); \n} \n\nint32_t main(){ \n    cin.tie(NULL)-&gt;sync_with_stdio(false); \n    cin &gt;&gt; n &gt;&gt; m; \n    for (int i = 1; i &lt; n + m; i++) { \n        int u, v; cin &gt;&gt; u &gt;&gt; v; \n        adj[u].emplace_back(v); \n        adj[v].emplace_back(u); \n    } \n    dfs(1, 1); \n    for (int u = n + 1; u &lt;= n + m; u++) { \n        int siz = adj[u].size(); \n        if (siz &gt;= 4) { \n            int dp[siz + 1][5]; \n            memset(dp, 0, sizeof dp); \n            dp[0][0] = 1; \n            for (int i = 1; i &lt;= siz; i++) { \n                dp[i][0] = 1; \n                for (int j = 1; j &lt;= 4; j++) { \n                    dp[i][j] = dp[i - 1][j] + (dp[i - 1][j - 1] * cnt[u][i - 1]); \n                } \n            } \n            ans += dp[siz][4]; ans %= mod; \n        } \n    } \n    cout &lt;&lt; ans; \n}\n</code></pre> <p>Total Time Complexity</p> <p>\\(O(n+m)\\)</p> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f \u0e28\u0e36\u0e01\u0e29\u0e32\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e40\u0e15\u0e34\u0e21\u0e44\u0e14\u0e49\u0e17\u0e35\u0e48 Fast X Fourier</p>","tags":["TOI","Bruteforce","DFS","DP","Hard"]},{"location":"problems/toi21_tech_sprites/","title":"toi21_tech_sprites","text":"","tags":["TOI","DSU","Bruteforce","Medium"]},{"location":"problems/toi21_tech_sprites/#problem","title":"Problem","text":"","tags":["TOI","DSU","Bruteforce","Medium"]},{"location":"problems/toi21_tech_sprites/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e21\u0e35 Graph \u0e2b\u0e19\u0e36\u0e48\u0e07\u0e17\u0e35\u0e48\u0e21\u0e35\u0e08\u0e33\u0e19\u0e27\u0e19 node \u0e41\u0e25\u0e30 edge \u0e14\u0e31\u0e07\u0e19\u0e35\u0e49:</p> <ul> <li>$n$ nodes (\u0e1a\u0e49\u0e32\u0e19\u0e02\u0e2d\u0e07 Tech-Sprites \u0e17\u0e35\u0e48 $i$)</li> <li>$m$ edges</li> </ul> <p>\u0e41\u0e15\u0e48\u0e25\u0e30 node $i$ \u0e21\u0e35\u0e04\u0e48\u0e32 2 \u0e04\u0e48\u0e32: $a[i], b[i]$.</p> <p>\u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30 connected-component (\u0e40\u0e0b\u0e15\u0e02\u0e2d\u0e07 node \u0e17\u0e35\u0e48\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e16\u0e36\u0e07\u0e01\u0e31\u0e19) \u0e15\u0e31\u0e27 Tech-Sprites \u0e08\u0e30\u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e15\u0e32\u0e21\u0e25\u0e33\u0e14\u0e31\u0e1a: \u0e01\u0e48\u0e2d\u0e19\u0e42\u0e14\u0e22\u0e40\u0e23\u0e35\u0e22\u0e07\u0e15\u0e32\u0e21\u0e04\u0e48\u0e32 $a[i]$ (\u0e04\u0e48\u0e32\u0e15\u0e48\u0e33\u0e01\u0e27\u0e48\u0e32\u0e01\u0e48\u0e2d\u0e19) \u2014 \u0e16\u0e49\u0e32 $a$ \u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e19\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e35\u0e22\u0e07\u0e15\u0e32\u0e21 $b$ (b \u0e19\u0e49\u0e2d\u0e22\u0e01\u0e48\u0e2d\u0e19)</p> <p>\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e1e\u0e34\u0e48\u0e21 edge \u0e19\u0e49\u0e2d\u0e22\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e43\u0e2b\u0e49\u0e40\u0e21\u0e37\u0e48\u0e2d Tech-Sprites \u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e17\u0e35\u0e25\u0e30 connected-component \u0e41\u0e25\u0e49\u0e27 component \u0e15\u0e48\u0e32\u0e07\u0e46 \u0e40\u0e23\u0e35\u0e22\u0e07\u0e15\u0e32\u0e21 $(a,b)$ \u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07\u0e44\u0e14\u0e49 (component \u0e17\u0e31\u0e49\u0e07\u0e01\u0e49\u0e2d\u0e19\u0e08\u0e30\u0e2d\u0e2d\u0e01\u0e17\u0e35\u0e25\u0e30\u0e01\u0e49\u0e2d\u0e19 \u0e42\u0e14\u0e22\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e2d\u0e2d\u0e01\u0e02\u0e2d\u0e07\u0e01\u0e49\u0e2d\u0e19\u0e16\u0e39\u0e01\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e08\u0e32\u0e01\u0e04\u0e48\u0e32 $a$ \u0e41\u0e25\u0e49\u0e27 $b$)</p> <p>\u0e42\u0e08\u0e17\u0e22\u0e4c: \u0e2b\u0e32\u0e08\u0e33\u0e19\u0e27\u0e19 edge \u0e02\u0e31\u0e49\u0e19\u0e15\u0e48\u0e33\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e1e\u0e34\u0e48\u0e21</p>","tags":["TOI","DSU","Bruteforce","Medium"]},{"location":"problems/toi21_tech_sprites/#_2","title":"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07","text":"<p>\u0e01\u0e23\u0e13\u0e35\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e1e\u0e34\u0e48\u0e21 edge:</p> <p></p> <p>\u0e01\u0e23\u0e13\u0e35\u0e19\u0e35\u0e49\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e1e\u0e34\u0e48\u0e21 edge \u0e2d\u0e22\u0e48\u0e32\u0e07\u0e19\u0e49\u0e2d\u0e22 1 \u0e40\u0e2a\u0e49\u0e19:</p> <p></p> <p>\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e40\u0e2a\u0e49\u0e19\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21 node <code>2-3</code> \u0e41\u0e1a\u0e1a\u0e19\u0e35\u0e49\u0e44\u0e14\u0e49:</p> <p></p> <p>Constraints</p> <p>$1 \\le n \\le 10^6$ $1 \\le m \\le 3\\cdot 10^6$</p> <p>Prerequisites</p> <ul> <li>DSU (Disjoint Set Union / Union-Find)</li> </ul>","tags":["TOI","DSU","Bruteforce","Medium"]},{"location":"problems/toi21_tech_sprites/#solution","title":"Solution","text":"","tags":["TOI","DSU","Bruteforce","Medium"]},{"location":"problems/toi21_tech_sprites/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33 (\u0e2a\u0e23\u0e38\u0e1b\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19)","text":"<ol> <li>\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 <code>(a[i], b[i], i)</code> \u0e25\u0e07\u0e43\u0e19 array \u0e41\u0e25\u0e49\u0e27 sort \u0e15\u0e32\u0e21\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e2d\u0e2d\u0e01\u0e08\u0e23\u0e34\u0e07 \u2014 \u0e04\u0e37\u0e2d\u0e40\u0e23\u0e35\u0e22\u0e07\u0e15\u0e32\u0e21 <code>(a[i], b[i])</code> (a \u0e01\u0e48\u0e2d\u0e19 \u0e16\u0e49\u0e32 a \u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e19\u0e43\u0e0a\u0e49 b)</li> <li>\u0e43\u0e0a\u0e49 DSU \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2b\u0e32 connected-components \u0e02\u0e2d\u0e07\u0e01\u0e23\u0e32\u0e1f\u0e40\u0e14\u0e34\u0e21</li> <li>\u0e2a\u0e23\u0e49\u0e32\u0e07 mapping <code>mp[idx]</code> \u0e43\u0e2b\u0e49\u0e41\u0e1b\u0e25\u0e07 index \u0e15\u0e49\u0e19\u0e09\u0e1a\u0e31\u0e1a\u0e02\u0e2d\u0e07 node \u0e44\u0e1b\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e2b\u0e25\u0e31\u0e07 sort (\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e43\u0e19 array \u0e17\u0e35\u0e48\u0e40\u0e23\u0e35\u0e22\u0e07\u0e41\u0e25\u0e49\u0e27)</li> <li>\u0e40\u0e23\u0e32\u0e08\u0e30 loop \u0e08\u0e32\u0e01 <code>1</code> \u0e16\u0e36\u0e07 <code>N-1</code> (\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e43\u0e19 array \u0e17\u0e35\u0e48\u0e40\u0e23\u0e35\u0e22\u0e07\u0e41\u0e25\u0e49\u0e27) \u0e41\u0e25\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e0a\u0e48\u0e27\u0e22\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e2a\u0e2d\u0e07 array:</li> <li><code>sz[root]</code> = \u0e02\u0e19\u0e32\u0e14\u0e02\u0e2d\u0e07 connected-component (\u0e08\u0e33\u0e19\u0e27\u0e19 node) \u0e02\u0e2d\u0e07 root \u0e19\u0e31\u0e49\u0e19</li> <li><code>cnt[root]</code> = \u0e08\u0e33\u0e19\u0e27\u0e19 node \u0e17\u0e35\u0e48\u0e43\u0e19\u0e25\u0e39\u0e1b\u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19\u0e21\u0e35 root \u0e40\u0e1b\u0e47\u0e19 root \u0e19\u0e31\u0e49\u0e19 (\u0e19\u0e31\u0e1a\u0e23\u0e27\u0e21 node \u0e17\u0e35\u0e48\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e41\u0e25\u0e49\u0e27\u0e14\u0e49\u0e27\u0e22)</li> <li> <p>\u0e16\u0e49\u0e32 <code>cnt[dsu(i)] != sz[dsu(i)]</code> \u0e41\u0e1b\u0e25\u0e27\u0e48\u0e32 connected-component \u0e02\u0e2d\u0e07\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07 <code>i</code> \u0e22\u0e31\u0e07\u0e44\u0e21\u0e48\u0e04\u0e23\u0e1a (\u0e22\u0e31\u0e07\u0e21\u0e35 node \u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e01\u0e23\u0e30\u0e08\u0e31\u0e14\u0e01\u0e23\u0e30\u0e08\u0e32\u0e22\u0e44\u0e21\u0e48\u0e15\u0e48\u0e2d\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e43\u0e19\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e40\u0e23\u0e35\u0e22\u0e07) \u2014 \u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e15\u0e23\u0e27\u0e08\u0e14\u0e39\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e16\u0e31\u0e14\u0e44\u0e1b <code>i+1</code> \u0e27\u0e48\u0e32 belong to root \u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48</p> </li> <li> <p>\u0e16\u0e49\u0e32\u0e44\u0e21\u0e48\u0e43\u0e0a\u0e48 \u0e43\u0e2b\u0e49\u0e40\u0e1e\u0e34\u0e48\u0e21 edge \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07 <code>i</code> \u0e01\u0e31\u0e1a <code>i+1</code> (\u0e04\u0e37\u0e2d <code>unite(i, i+1)</code>) \u0e41\u0e25\u0e30\u0e40\u0e1e\u0e34\u0e48\u0e21 <code>ans</code> \u0e02\u0e36\u0e49\u0e19 1</p> </li> <li>\u0e17\u0e33\u0e08\u0e19\u0e08\u0e1a\u0e41\u0e25\u0e49\u0e27 <code>ans</code> \u0e04\u0e37\u0e2d\u0e04\u0e33\u0e15\u0e2d\u0e1a (\u0e08\u0e33\u0e19\u0e27\u0e19 edge \u0e02\u0e31\u0e49\u0e19\u0e15\u0e48\u0e33\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e1e\u0e34\u0e48\u0e21)</li> </ol> <p>\u0e2b\u0e25\u0e31\u0e01\u0e01\u0e32\u0e23\u0e2a\u0e31\u0e49\u0e19 \u0e46: \u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e43\u0e2b\u0e49\u0e17\u0e38\u0e01 connected-component \u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01 sort \u0e15\u0e32\u0e21 $(a,b)$ \u0e40\u0e1b\u0e47\u0e19\u0e0a\u0e48\u0e27\u0e07\u0e15\u0e34\u0e14\u0e15\u0e48\u0e2d\u0e01\u0e31\u0e19 (contiguous) \u0e43\u0e19\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e17\u0e35\u0e48\u0e40\u0e23\u0e35\u0e22\u0e07\u0e41\u0e25\u0e49\u0e27 \u0e16\u0e49\u0e32\u0e0a\u0e48\u0e27\u0e07\u0e44\u0e2b\u0e19\u0e04\u0e31\u0e48\u0e19\u0e14\u0e49\u0e27\u0e22 node \u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19 component \u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e41\u0e17\u0e23\u0e01 edge \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e23\u0e27\u0e21\u0e0a\u0e48\u0e27\u0e07\u0e43\u0e2b\u0e49\u0e15\u0e48\u0e2d\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07 \u2014 \u0e02\u0e31\u0e49\u0e19\u0e15\u0e48\u0e33\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e08\u0e33\u0e19\u0e27\u0e19\u0e04\u0e23\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48\u0e40\u0e23\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e0a\u0e48\u0e2d\u0e07\u0e27\u0e48\u0e32\u0e07\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e40\u0e23\u0e35\u0e22\u0e07\u0e17\u0e35\u0e48\u0e21\u0e35 root \u0e15\u0e48\u0e32\u0e07\u0e01\u0e31\u0e19\u0e08\u0e19\u0e01\u0e27\u0e48\u0e32\u0e08\u0e30\u0e04\u0e23\u0e1a\u0e02\u0e19\u0e32\u0e14\u0e02\u0e2d\u0e07 component \u0e19\u0e31\u0e49\u0e19</p> <p>\u0e20\u0e32\u0e1e\u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a:</p> <ul> <li>\u0e20\u0e32\u0e1e <code>sorted_array</code> \u2014 array \u0e17\u0e35\u0e48\u0e16\u0e39\u0e01 sort \u0e41\u0e25\u0e49\u0e27:   </li> <li>\u0e20\u0e32\u0e1e <code>extra_edges</code> \u2014 \u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e23\u0e27\u0e08\u0e41\u0e25\u0e49\u0e27\u0e44\u0e21\u0e48\u0e15\u0e23\u0e07\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02 \u0e15\u0e49\u0e2d\u0e07\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e40\u0e2a\u0e49\u0e19\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21:   </li> </ul>","tags":["TOI","DSU","Bruteforce","Medium"]},{"location":"problems/toi21_tech_sprites/#code","title":"Code","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconst int N = 1000000 + 5;\nconst int M = 3000000 + 5;\n\nint n, m;\nint par[N], sz[N], cnt[N], mp[N];\ntuple&lt;int,int,int&gt; a[N]; // (a, b, idx)\n\n// DSU\nint dsu(int x){\n    return par[x] == x ? x : par[x] = dsu(par[x]);\n}\n\nvoid unite(int u, int v){\n    u = dsu(u); v = dsu(v);\n    if(u == v) return;\n    if(sz[u] &lt; sz[v]) swap(u, v);\n    // attach v into u\n    par[v] = u;\n    sz[u] += sz[v];\n    cnt[u] += cnt[v];\n}\n\nint32_t main(){\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    cin &gt;&gt; n &gt;&gt; m;\n    // initialize DSU\n    for(int i = 0; i &lt;= n; ++i){\n        par[i] = i;\n        sz[i] = 1;\n        cnt[i] = 0;\n    }\n\n    // read nodes' (a,b) and original index\n    for(int i = 1; i &lt;= n; ++i){\n        int x, y;\n        cin &gt;&gt; x &gt;&gt; y;\n        a[i] = make_tuple(x, y, i);\n    }\n\n    // sort by (a, b)\n    sort(a + 1, a + 1 + n);\n\n    // mp[original_index] -&gt; position in sorted array (1..n)\n    for(int i = 1; i &lt;= n; ++i){\n        int x, y, idx;\n        tie(x, y, idx) = a[i];\n        mp[idx] = i;\n    }\n\n    // read existing edges and unite their positions in the sorted order\n    for(int i = 0; i &lt; m; ++i){\n        int u, v;\n        cin &gt;&gt; u &gt;&gt; v;\n        int pu = mp[u];\n        int pv = mp[v];\n        // unite positions pu and pv in DSU\n        int ru = dsu(pu), rv = dsu(pv);\n        if(ru != rv){\n            // union by size\n            if(sz[ru] &lt; sz[rv]) swap(ru, rv);\n            par[rv] = ru;\n            sz[ru] += sz[rv];\n        }\n    }\n\n    // now we scan positions 1..n to count how many positions belong to each root\n    // and add edges when needed between consecutive positions\n    int ans = 0;\n    for(int i = 1; i &lt;= n; ++i){\n        int r = dsu(i);\n        cnt[r]++; // one more position from root r has appeared in order\n\n        // if we've already seen all positions of this component, nothing to do\n        if(cnt[r] == sz[r]) continue;\n\n        // otherwise, if next position belongs to different root, we must connect\n        if(i + 1 &lt;= n &amp;&amp; dsu(i + 1) != r){\n            // connect i and i+1 (we simulate adding an edge that unites their components)\n            int ru = dsu(i), rv = dsu(i + 1);\n            if(ru != rv){\n                // union by size\n                if(sz[ru] &lt; sz[rv]) swap(ru, rv);\n                par[rv] = ru;\n                // when merging, move cnt and sz properly\n                cnt[ru] += cnt[rv];\n                sz[ru] += sz[rv];\n            }\n            ans++;\n        }\n    }\n\n    cout &lt;&lt; ans &lt;&lt; \"\\n\";\n    return 0;\n}\n</code></pre> <p>Total Time Complexity</p> <p>\u0e42\u0e14\u0e22\u0e23\u0e27\u0e21\u0e1b\u0e23\u0e30\u0e21\u0e32\u0e13 $O((n + m),\\alpha(n))$ \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e17\u0e33 DSU \u0e41\u0e25\u0e30\u0e01\u0e32\u0e23 sort \u0e04\u0e48\u0e32 $(a,b)$ \u0e08\u0e30\u0e21\u0e35\u0e04\u0e48\u0e32 $O(n\\log n)$ \u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19\u0e23\u0e27\u0e21\u0e41\u0e25\u0e49\u0e27\u0e40\u0e27\u0e25\u0e32\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e01\u0e23\u0e2d\u0e1a\u0e17\u0e35\u0e48\u0e22\u0e2d\u0e21\u0e23\u0e31\u0e1a\u0e44\u0e14\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a $n \\le 10^6, m \\le 3\\cdot 10^6$ (\u0e02\u0e36\u0e49\u0e19\u0e01\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23 I/O \u0e41\u0e25\u0e30 optimization \u0e43\u0e19\u0e42\u0e04\u0e49\u0e14\u0e08\u0e23\u0e34\u0e07)</p>","tags":["TOI","DSU","Bruteforce","Medium"]}]}